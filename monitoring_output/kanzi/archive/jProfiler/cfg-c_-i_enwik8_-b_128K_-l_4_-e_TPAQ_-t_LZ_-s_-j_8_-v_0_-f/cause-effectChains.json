[{"methodSignature":"<kanzi.bitstream.DefaultOutputBitStream: close()V>","callChain":["<kanzi.bitstream.DefaultOutputBitStream: close()V>"],"options":{"<kanzi.bitstream.DefaultOutputBitStream: close()V>":[{"packageName":"kanzi.bitstream","className":"DefaultOutputBitStream","methodSignature":"<kanzi.bitstream.DefaultOutputBitStream: close()V>","javaLine":218,"bytecodeIndex":-1,"operationType":"ifNewArrSink","options":["entropy"],"optionCount":1,"originalStmt":"$stack16 = newarray (byte)[8]","mayValues":[]}]},"optionList":["entropy"]},{"methodSignature":"<kanzi.bitstream.DefaultOutputBitStream: <init>(Ljava/io/OutputStream;I)V>","callChain":["<kanzi.bitstream.DefaultOutputBitStream: <init>(Ljava/io/OutputStream;I)V>","<kanzi.io.CompressedOutputStream: <init>(Ljava/io/OutputStream;Ljava/util/Map;)V>","<kanzi.app.BlockCompressor$FileCompressTask: call()Lkanzi/app/BlockCompressor$FileCompressResult;>","<kanzi.app.BlockCompressor: call()Ljava/lang/Integer;>","<kanzi.app.Kanzi: main([Ljava/lang/String;)V>"],"options":{"<kanzi.app.BlockCompressor$FileCompressTask: call()Lkanzi/app/BlockCompressor$FileCompressResult;>":[{"packageName":"kanzi.app","className":"BlockCompressor$FileCompressTask","methodSignature":"<kanzi.app.BlockCompressor$FileCompressTask: call()Lkanzi/app/BlockCompressor$FileCompressResult;>","javaLine":640,"bytecodeIndex":-1,"operationType":"directlyIoSink","options":["blockSize"],"optionCount":1,"originalStmt":"virtualinvoke $stack277.<java.io.PrintStream: void println(java.lang.String)>($stack278)","mayValues":[]},{"packageName":"kanzi.app","className":"BlockCompressor$FileCompressTask","methodSignature":"<kanzi.app.BlockCompressor$FileCompressTask: call()Lkanzi/app/BlockCompressor$FileCompressResult;>","javaLine":661,"bytecodeIndex":-1,"operationType":"directlyIoSink","options":["pool"],"optionCount":1,"originalStmt":"virtualinvoke $stack249.<java.io.PrintStream: void println(java.lang.String)>($stack250)","mayValues":[]},{"packageName":"kanzi.app","className":"BlockCompressor$FileCompressTask","methodSignature":"<kanzi.app.BlockCompressor$FileCompressTask: call()Lkanzi/app/BlockCompressor$FileCompressResult;>","javaLine":599,"bytecodeIndex":-1,"operationType":"directlyIoSink","options":["transform"],"optionCount":1,"originalStmt":"virtualinvoke $stack296.<java.io.PrintStream: void println(java.lang.String)>($stack302)","mayValues":[]},{"packageName":"kanzi.app","className":"BlockCompressor$FileCompressTask","methodSignature":"<kanzi.app.BlockCompressor$FileCompressTask: call()Lkanzi/app/BlockCompressor$FileCompressResult;>","javaLine":635,"bytecodeIndex":-1,"operationType":"directlyIoSink","options":["pool"],"optionCount":1,"originalStmt":"$stack59#53 = virtualinvoke $stack58#41.<java.io.InputStream: int read(byte[],int,int)>($stack57#45, 0, $stack56#51)","mayValues":[]},{"packageName":"kanzi.app","className":"BlockCompressor$FileCompressTask","methodSignature":"<kanzi.app.BlockCompressor$FileCompressTask: call()Lkanzi/app/BlockCompressor$FileCompressResult;>","javaLine":553,"bytecodeIndex":-1,"operationType":"directlyIoSink","options":["jobs"],"optionCount":1,"originalStmt":"$stack210 = virtualinvoke $stack208.<java.nio.file.FileSystem: java.nio.file.Path getPath(java.lang.String,java.lang.String[])>(outputName, $stack209)","mayValues":[]},{"packageName":"kanzi.app","className":"BlockCompressor$FileCompressTask","methodSignature":"<kanzi.app.BlockCompressor$FileCompressTask: call()Lkanzi/app/BlockCompressor$FileCompressResult;>","javaLine":574,"bytecodeIndex":-1,"operationType":"directlyIoSink","options":["blockSize"],"optionCount":1,"originalStmt":"staticinvoke <java.nio.file.Files: java.nio.file.Path createDirectories(java.nio.file.Path,java.nio.file.attribute.FileAttribute[])>($stack317, $stack318)","mayValues":[]},{"packageName":"kanzi.app","className":"BlockCompressor$FileCompressTask","methodSignature":"<kanzi.app.BlockCompressor$FileCompressTask: call()Lkanzi/app/BlockCompressor$FileCompressResult;>","javaLine":574,"bytecodeIndex":-1,"operationType":"directlyIoSink","options":["pool"],"optionCount":1,"originalStmt":"staticinvoke <java.nio.file.Files: java.nio.file.Path createDirectories(java.nio.file.Path,java.nio.file.attribute.FileAttribute[])>($stack317, $stack318)","mayValues":[]},{"packageName":"kanzi.app","className":"BlockCompressor$FileCompressTask","methodSignature":"<kanzi.app.BlockCompressor$FileCompressTask: call()Lkanzi/app/BlockCompressor$FileCompressResult;>","javaLine":723,"bytecodeIndex":-1,"operationType":"directlyNewArrSink","options":["transform"],"optionCount":1,"originalStmt":"$stack84 = newarray (kanzi.Listener)[$stack83]","mayValues":[]},{"packageName":"kanzi.app","className":"BlockCompressor$FileCompressTask","methodSignature":"<kanzi.app.BlockCompressor$FileCompressTask: call()Lkanzi/app/BlockCompressor$FileCompressResult;>","javaLine":640,"bytecodeIndex":-1,"operationType":"directlyIoSink","options":["verbosity"],"optionCount":1,"originalStmt":"virtualinvoke $stack277.<java.io.PrintStream: void println(java.lang.String)>($stack278)","mayValues":[]},{"packageName":"kanzi.app","className":"BlockCompressor$FileCompressTask","methodSignature":"<kanzi.app.BlockCompressor$FileCompressTask: call()Lkanzi/app/BlockCompressor$FileCompressResult;>","javaLine":593,"bytecodeIndex":-1,"operationType":"directlyIoSink","options":["verbosity"],"optionCount":1,"originalStmt":"virtualinvoke $stack306.<java.io.PrintStream: void println(java.lang.String)>($stack310)","mayValues":[]},{"packageName":"kanzi.app","className":"BlockCompressor$FileCompressTask","methodSignature":"<kanzi.app.BlockCompressor$FileCompressTask: call()Lkanzi/app/BlockCompressor$FileCompressResult;>","javaLine":605,"bytecodeIndex":-1,"operationType":"directlyIoSink","options":["jobs"],"optionCount":1,"originalStmt":"specialinvoke $u15.<java.io.FileInputStream: void <init>(java.lang.String)>(inputName)","mayValues":[]},{"packageName":"kanzi.app","className":"BlockCompressor$FileCompressTask","methodSignature":"<kanzi.app.BlockCompressor$FileCompressTask: call()Lkanzi/app/BlockCompressor$FileCompressResult;>","javaLine":574,"bytecodeIndex":-1,"operationType":"directlyIoSink","options":["transform"],"optionCount":1,"originalStmt":"staticinvoke <java.nio.file.Files: java.nio.file.Path createDirectories(java.nio.file.Path,java.nio.file.attribute.FileAttribute[])>($stack317, $stack318)","mayValues":[]},{"packageName":"kanzi.app","className":"BlockCompressor$FileCompressTask","methodSignature":"<kanzi.app.BlockCompressor$FileCompressTask: call()Lkanzi/app/BlockCompressor$FileCompressResult;>","javaLine":640,"bytecodeIndex":-1,"operationType":"directlyIoSink","options":["transform"],"optionCount":1,"originalStmt":"virtualinvoke $stack277.<java.io.PrintStream: void println(java.lang.String)>($stack278)","mayValues":[]},{"packageName":"kanzi.app","className":"BlockCompressor$FileCompressTask","methodSignature":"<kanzi.app.BlockCompressor$FileCompressTask: call()Lkanzi/app/BlockCompressor$FileCompressResult;>","javaLine":639,"bytecodeIndex":-1,"operationType":"directlyIoSink","options":["transform"],"optionCount":1,"originalStmt":"virtualinvoke $stack272.<java.io.PrintStream: void print(java.lang.String)>($stack276)","mayValues":[]},{"packageName":"kanzi.app","className":"BlockCompressor$FileCompressTask","methodSignature":"<kanzi.app.BlockCompressor$FileCompressTask: call()Lkanzi/app/BlockCompressor$FileCompressResult;>","javaLine":644,"bytecodeIndex":-1,"operationType":"loopIoSink","options":["jobs"],"optionCount":1,"originalStmt":"$stack59#53 = virtualinvoke $stack58#41.<java.io.InputStream: int read(byte[],int,int)>($stack57#45, 0, $stack56#51)","mayValues":[]},{"packageName":"kanzi.app","className":"BlockCompressor$FileCompressTask","methodSignature":"<kanzi.app.BlockCompressor$FileCompressTask: call()Lkanzi/app/BlockCompressor$FileCompressResult;>","javaLine":609,"bytecodeIndex":-1,"operationType":"directlyIoSink","options":["jobs"],"optionCount":1,"originalStmt":"virtualinvoke $stack286.<java.io.PrintStream: void println(java.lang.String)>($stack292)","mayValues":[]},{"packageName":"kanzi.app","className":"BlockCompressor$FileCompressTask","methodSignature":"<kanzi.app.BlockCompressor$FileCompressTask: call()Lkanzi/app/BlockCompressor$FileCompressResult;>","javaLine":723,"bytecodeIndex":-1,"operationType":"directlyNewArrSink","options":["jobs"],"optionCount":1,"originalStmt":"$stack84 = newarray (kanzi.Listener)[$stack83]","mayValues":[]},{"packageName":"kanzi.app","className":"BlockCompressor$FileCompressTask","methodSignature":"<kanzi.app.BlockCompressor$FileCompressTask: call()Lkanzi/app/BlockCompressor$FileCompressResult;>","javaLine":635,"bytecodeIndex":-1,"operationType":"directlyIoSink","options":["jobs"],"optionCount":1,"originalStmt":"$stack59#53 = virtualinvoke $stack58#41.<java.io.InputStream: int read(byte[],int,int)>($stack57#45, 0, $stack56#51)","mayValues":[]},{"packageName":"kanzi.app","className":"BlockCompressor$FileCompressTask","methodSignature":"<kanzi.app.BlockCompressor$FileCompressTask: call()Lkanzi/app/BlockCompressor$FileCompressResult;>","javaLine":640,"bytecodeIndex":-1,"operationType":"directlyIoSink","options":["jobs"],"optionCount":1,"originalStmt":"virtualinvoke $stack277.<java.io.PrintStream: void println(java.lang.String)>($stack278)","mayValues":[]},{"packageName":"kanzi.app","className":"BlockCompressor$FileCompressTask","methodSignature":"<kanzi.app.BlockCompressor$FileCompressTask: call()Lkanzi/app/BlockCompressor$FileCompressResult;>","javaLine":623,"bytecodeIndex":-1,"operationType":"directlyNewArrSink","options":["entropy"],"optionCount":1,"originalStmt":"$stack187 = newarray (kanzi.Listener)[$stack186]","mayValues":[]},{"packageName":"kanzi.app","className":"BlockCompressor$FileCompressTask","methodSignature":"<kanzi.app.BlockCompressor$FileCompressTask: call()Lkanzi/app/BlockCompressor$FileCompressResult;>","javaLine":661,"bytecodeIndex":-1,"operationType":"directlyIoSink","options":["blockSize"],"optionCount":1,"originalStmt":"virtualinvoke $stack249.<java.io.PrintStream: void println(java.lang.String)>($stack250)","mayValues":[]},{"packageName":"kanzi.app","className":"BlockCompressor$FileCompressTask","methodSignature":"<kanzi.app.BlockCompressor$FileCompressTask: call()Lkanzi/app/BlockCompressor$FileCompressResult;>","javaLine":593,"bytecodeIndex":-1,"operationType":"directlyIoSink","options":["checksum"],"optionCount":1,"originalStmt":"virtualinvoke $stack306.<java.io.PrintStream: void println(java.lang.String)>($stack310)","mayValues":[]}],"<kanzi.app.BlockCompressor: call()Ljava/lang/Integer;>":[{"packageName":"kanzi.app","className":"BlockCompressor","methodSignature":"<kanzi.app.BlockCompressor: call()Ljava/lang/Integer;>","javaLine":367,"bytecodeIndex":-1,"operationType":"directlyIoSink","options":["verbosity"],"optionCount":1,"originalStmt":"virtualinvoke $stack429.<java.io.PrintStream: void println(java.lang.String)>($stack433)","mayValues":[]}],"<kanzi.app.Kanzi: main([Ljava/lang/String;)V>":[{"packageName":"kanzi.app","className":"Kanzi","methodSignature":"<kanzi.app.Kanzi: main([Ljava/lang/String;)V>","javaLine":93,"bytecodeIndex":-1,"operationType":"directlyIoSink","options":["checksum"],"optionCount":1,"originalStmt":"virtualinvoke $stack56.<java.io.PrintStream: void println(java.lang.String)>($stack62)","mayValues":[]}]},"optionList":["transform","entropy","jobs","pool","checksum","verbosity","blockSize"]},{"methodSignature":"<kanzi.bitstream.DefaultOutputBitStream: isClosed()Z>","callChain":["<kanzi.bitstream.DefaultOutputBitStream: isClosed()Z>","<kanzi.bitstream.DefaultOutputBitStream: flush()V>","<kanzi.bitstream.DefaultOutputBitStream: writeBits([BII)I>","<kanzi.entropy.NullEntropyEncoder: encode([BII)I>","<kanzi.io.CompressedOutputStream$EncodingTask: encodeBlock(Lkanzi/SliceByteArray;Lkanzi/SliceByteArray;IJII)Lkanzi/io/CompressedOutputStream$Status;>","<kanzi.io.CompressedOutputStream$EncodingTask: call()Lkanzi/io/CompressedOutputStream$Status;>","<kanzi.io.CompressedOutputStream$EncodingTask: call()Ljava/lang/Object;>","<java.util.concurrent.ThreadPoolExecutor$Worker: run()V>"],"options":{"<kanzi.bitstream.DefaultOutputBitStream: flush()V>":[{"packageName":"kanzi.bitstream","className":"DefaultOutputBitStream","methodSignature":"<kanzi.bitstream.DefaultOutputBitStream: flush()V>","javaLine":203,"bytecodeIndex":-1,"operationType":"directlyIoSink","options":["level"],"optionCount":1,"originalStmt":"virtualinvoke $stack6.<java.io.OutputStream: void write(byte[],int,int)>($stack5, 0, $stack4)","mayValues":[]},{"packageName":"kanzi.bitstream","className":"DefaultOutputBitStream","methodSignature":"<kanzi.bitstream.DefaultOutputBitStream: flush()V>","javaLine":203,"bytecodeIndex":-1,"operationType":"directlyIoSink","options":["jobs"],"optionCount":1,"originalStmt":"virtualinvoke $stack6.<java.io.OutputStream: void write(byte[],int,int)>($stack5, 0, $stack4)","mayValues":[]},{"packageName":"kanzi.bitstream","className":"DefaultOutputBitStream","methodSignature":"<kanzi.bitstream.DefaultOutputBitStream: flush()V>","javaLine":203,"bytecodeIndex":-1,"operationType":"directlyIoSink","options":["blockSize"],"optionCount":1,"originalStmt":"virtualinvoke $stack6.<java.io.OutputStream: void write(byte[],int,int)>($stack5, 0, $stack4)","mayValues":[]}]},"optionList":["level","jobs","blockSize"]},{"methodSignature":"<kanzi.bitstream.DefaultOutputBitStream: isClosed()Z>","callChain":["<kanzi.bitstream.DefaultOutputBitStream: isClosed()Z>","<kanzi.bitstream.DefaultOutputBitStream: flush()V>","<kanzi.bitstream.DefaultOutputBitStream: writeBits([BII)I>","<kanzi.io.CompressedOutputStream$EncodingTask: encodeBlock(Lkanzi/SliceByteArray;Lkanzi/SliceByteArray;IJII)Lkanzi/io/CompressedOutputStream$Status;>","<kanzi.io.CompressedOutputStream$EncodingTask: call()Lkanzi/io/CompressedOutputStream$Status;>","<kanzi.io.CompressedOutputStream$EncodingTask: call()Ljava/lang/Object;>","<java.util.concurrent.ThreadPoolExecutor$Worker: run()V>"],"options":{"<kanzi.bitstream.DefaultOutputBitStream: flush()V>":[{"packageName":"kanzi.bitstream","className":"DefaultOutputBitStream","methodSignature":"<kanzi.bitstream.DefaultOutputBitStream: flush()V>","javaLine":203,"bytecodeIndex":-1,"operationType":"directlyIoSink","options":["level"],"optionCount":1,"originalStmt":"virtualinvoke $stack6.<java.io.OutputStream: void write(byte[],int,int)>($stack5, 0, $stack4)","mayValues":[]},{"packageName":"kanzi.bitstream","className":"DefaultOutputBitStream","methodSignature":"<kanzi.bitstream.DefaultOutputBitStream: flush()V>","javaLine":203,"bytecodeIndex":-1,"operationType":"directlyIoSink","options":["jobs"],"optionCount":1,"originalStmt":"virtualinvoke $stack6.<java.io.OutputStream: void write(byte[],int,int)>($stack5, 0, $stack4)","mayValues":[]},{"packageName":"kanzi.bitstream","className":"DefaultOutputBitStream","methodSignature":"<kanzi.bitstream.DefaultOutputBitStream: flush()V>","javaLine":203,"bytecodeIndex":-1,"operationType":"directlyIoSink","options":["blockSize"],"optionCount":1,"originalStmt":"virtualinvoke $stack6.<java.io.OutputStream: void write(byte[],int,int)>($stack5, 0, $stack4)","mayValues":[]}]},"optionList":["level","jobs","blockSize"]},{"methodSignature":"<kanzi.bitstream.DefaultOutputBitStream: isClosed()Z>","callChain":["<kanzi.bitstream.DefaultOutputBitStream: isClosed()Z>","<kanzi.bitstream.DefaultOutputBitStream: flush()V>","<kanzi.bitstream.DefaultOutputBitStream: close()V>","<kanzi.io.CompressedOutputStream$EncodingTask: encodeBlock(Lkanzi/SliceByteArray;Lkanzi/SliceByteArray;IJII)Lkanzi/io/CompressedOutputStream$Status;>","<kanzi.io.CompressedOutputStream$EncodingTask: call()Lkanzi/io/CompressedOutputStream$Status;>","<kanzi.io.CompressedOutputStream$EncodingTask: call()Ljava/lang/Object;>","<java.util.concurrent.ThreadPoolExecutor$Worker: run()V>"],"options":{"<kanzi.bitstream.DefaultOutputBitStream: close()V>":[{"packageName":"kanzi.bitstream","className":"DefaultOutputBitStream","methodSignature":"<kanzi.bitstream.DefaultOutputBitStream: close()V>","javaLine":218,"bytecodeIndex":-1,"operationType":"ifNewArrSink","options":["entropy"],"optionCount":1,"originalStmt":"$stack16 = newarray (byte)[8]","mayValues":[]}],"<kanzi.bitstream.DefaultOutputBitStream: flush()V>":[{"packageName":"kanzi.bitstream","className":"DefaultOutputBitStream","methodSignature":"<kanzi.bitstream.DefaultOutputBitStream: flush()V>","javaLine":203,"bytecodeIndex":-1,"operationType":"directlyIoSink","options":["level"],"optionCount":1,"originalStmt":"virtualinvoke $stack6.<java.io.OutputStream: void write(byte[],int,int)>($stack5, 0, $stack4)","mayValues":[]},{"packageName":"kanzi.bitstream","className":"DefaultOutputBitStream","methodSignature":"<kanzi.bitstream.DefaultOutputBitStream: flush()V>","javaLine":203,"bytecodeIndex":-1,"operationType":"directlyIoSink","options":["jobs"],"optionCount":1,"originalStmt":"virtualinvoke $stack6.<java.io.OutputStream: void write(byte[],int,int)>($stack5, 0, $stack4)","mayValues":[]},{"packageName":"kanzi.bitstream","className":"DefaultOutputBitStream","methodSignature":"<kanzi.bitstream.DefaultOutputBitStream: flush()V>","javaLine":203,"bytecodeIndex":-1,"operationType":"directlyIoSink","options":["blockSize"],"optionCount":1,"originalStmt":"virtualinvoke $stack6.<java.io.OutputStream: void write(byte[],int,int)>($stack5, 0, $stack4)","mayValues":[]}]},"optionList":["entropy","level","jobs","blockSize"]},{"methodSignature":"<kanzi.bitstream.DefaultOutputBitStream: isClosed()Z>","callChain":["<kanzi.bitstream.DefaultOutputBitStream: isClosed()Z>","<kanzi.bitstream.DefaultOutputBitStream: flush()V>","<kanzi.bitstream.DefaultOutputBitStream: pushCurrent()V>","<kanzi.bitstream.DefaultOutputBitStream: writeBits([BII)I>","<kanzi.io.CompressedOutputStream$EncodingTask: encodeBlock(Lkanzi/SliceByteArray;Lkanzi/SliceByteArray;IJII)Lkanzi/io/CompressedOutputStream$Status;>","<kanzi.io.CompressedOutputStream$EncodingTask: call()Lkanzi/io/CompressedOutputStream$Status;>","<kanzi.io.CompressedOutputStream$EncodingTask: call()Ljava/lang/Object;>","<java.util.concurrent.ThreadPoolExecutor$Worker: run()V>"],"options":{"<kanzi.bitstream.DefaultOutputBitStream: flush()V>":[{"packageName":"kanzi.bitstream","className":"DefaultOutputBitStream","methodSignature":"<kanzi.bitstream.DefaultOutputBitStream: flush()V>","javaLine":203,"bytecodeIndex":-1,"operationType":"directlyIoSink","options":["level"],"optionCount":1,"originalStmt":"virtualinvoke $stack6.<java.io.OutputStream: void write(byte[],int,int)>($stack5, 0, $stack4)","mayValues":[]},{"packageName":"kanzi.bitstream","className":"DefaultOutputBitStream","methodSignature":"<kanzi.bitstream.DefaultOutputBitStream: flush()V>","javaLine":203,"bytecodeIndex":-1,"operationType":"directlyIoSink","options":["jobs"],"optionCount":1,"originalStmt":"virtualinvoke $stack6.<java.io.OutputStream: void write(byte[],int,int)>($stack5, 0, $stack4)","mayValues":[]},{"packageName":"kanzi.bitstream","className":"DefaultOutputBitStream","methodSignature":"<kanzi.bitstream.DefaultOutputBitStream: flush()V>","javaLine":203,"bytecodeIndex":-1,"operationType":"directlyIoSink","options":["blockSize"],"optionCount":1,"originalStmt":"virtualinvoke $stack6.<java.io.OutputStream: void write(byte[],int,int)>($stack5, 0, $stack4)","mayValues":[]}]},"optionList":["level","jobs","blockSize"]},{"methodSignature":"<kanzi.bitstream.DefaultOutputBitStream: isClosed()Z>","callChain":["<kanzi.bitstream.DefaultOutputBitStream: isClosed()Z>","<kanzi.bitstream.DefaultOutputBitStream: close()V>","<kanzi.io.CompressedOutputStream$EncodingTask: encodeBlock(Lkanzi/SliceByteArray;Lkanzi/SliceByteArray;IJII)Lkanzi/io/CompressedOutputStream$Status;>","<kanzi.io.CompressedOutputStream$EncodingTask: call()Lkanzi/io/CompressedOutputStream$Status;>","<kanzi.io.CompressedOutputStream$EncodingTask: call()Ljava/lang/Object;>","<java.util.concurrent.ThreadPoolExecutor$Worker: run()V>"],"options":{"<kanzi.bitstream.DefaultOutputBitStream: close()V>":[{"packageName":"kanzi.bitstream","className":"DefaultOutputBitStream","methodSignature":"<kanzi.bitstream.DefaultOutputBitStream: close()V>","javaLine":218,"bytecodeIndex":-1,"operationType":"ifNewArrSink","options":["entropy"],"optionCount":1,"originalStmt":"$stack16 = newarray (byte)[8]","mayValues":[]}]},"optionList":["entropy"]},{"methodSignature":"<kanzi.Global: positiveOrNull(I)I>","callChain":["<kanzi.Global: positiveOrNull(I)I>","<kanzi.Global: squash(I)I>","<kanzi.Global: initStretch()[I>","<kanzi.Global: <clinit>()V>","<kanzi.io.CompressedOutputStream: processBlock()V>","<kanzi.io.CompressedOutputStream: write([BII)V>","<kanzi.app.BlockCompressor$FileCompressTask: call()Lkanzi/app/BlockCompressor$FileCompressResult;>","<kanzi.app.BlockCompressor: call()Ljava/lang/Integer;>","<kanzi.app.Kanzi: main([Ljava/lang/String;)V>"],"options":{"<kanzi.app.BlockCompressor$FileCompressTask: call()Lkanzi/app/BlockCompressor$FileCompressResult;>":[{"packageName":"kanzi.app","className":"BlockCompressor$FileCompressTask","methodSignature":"<kanzi.app.BlockCompressor$FileCompressTask: call()Lkanzi/app/BlockCompressor$FileCompressResult;>","javaLine":593,"bytecodeIndex":-1,"operationType":"directlyIoSink","options":["verbosity"],"optionCount":1,"originalStmt":"virtualinvoke $stack306.<java.io.PrintStream: void println(java.lang.String)>($stack310)","mayValues":[]}],"<kanzi.io.CompressedOutputStream: processBlock()V>":[{"packageName":"kanzi.io","className":"CompressedOutputStream","methodSignature":"<kanzi.io.CompressedOutputStream: processBlock()V>","javaLine":434,"bytecodeIndex":-1,"operationType":"ifNewArrSink","options":["entropy"],"optionCount":1,"originalStmt":"$stack80 = newarray (int)[$stack78]","mayValues":[]},{"packageName":"kanzi.io","className":"CompressedOutputStream","methodSignature":"<kanzi.io.CompressedOutputStream: processBlock()V>","javaLine":434,"bytecodeIndex":-1,"operationType":"ifNewArrSink","options":["entropy"],"optionCount":1,"originalStmt":"$stack20 = newarray (int)[1]","mayValues":[]},{"packageName":"kanzi.io","className":"CompressedOutputStream","methodSignature":"<kanzi.io.CompressedOutputStream: processBlock()V>","javaLine":439,"bytecodeIndex":-1,"operationType":"directlyNewArrSink","options":["checksum"],"optionCount":1,"originalStmt":"$stack80 = newarray (int)[$stack78]","mayValues":[]},{"packageName":"kanzi.io","className":"CompressedOutputStream","methodSignature":"<kanzi.io.CompressedOutputStream: processBlock()V>","javaLine":439,"bytecodeIndex":-1,"operationType":"directlyNewArrSink","options":["jobs"],"optionCount":1,"originalStmt":"$stack80 = newarray (int)[$stack78]","mayValues":[]},{"packageName":"kanzi.io","className":"CompressedOutputStream","methodSignature":"<kanzi.io.CompressedOutputStream: processBlock()V>","javaLine":429,"bytecodeIndex":-1,"operationType":"directlyNewArrSink","options":["entropy"],"optionCount":1,"originalStmt":"$stack18 = newarray (kanzi.Listener)[$stack17]","mayValues":[]}],"<kanzi.app.BlockCompressor: call()Ljava/lang/Integer;>":[{"packageName":"kanzi.app","className":"BlockCompressor","methodSignature":"<kanzi.app.BlockCompressor: call()Ljava/lang/Integer;>","javaLine":367,"bytecodeIndex":-1,"operationType":"directlyIoSink","options":["verbosity"],"optionCount":1,"originalStmt":"virtualinvoke $stack429.<java.io.PrintStream: void println(java.lang.String)>($stack433)","mayValues":[]}],"<kanzi.app.Kanzi: main([Ljava/lang/String;)V>":[{"packageName":"kanzi.app","className":"Kanzi","methodSignature":"<kanzi.app.Kanzi: main([Ljava/lang/String;)V>","javaLine":93,"bytecodeIndex":-1,"operationType":"directlyIoSink","options":["checksum"],"optionCount":1,"originalStmt":"virtualinvoke $stack56.<java.io.PrintStream: void println(java.lang.String)>($stack62)","mayValues":[]}],"<kanzi.io.CompressedOutputStream: write([BII)V>":[{"packageName":"kanzi.io","className":"CompressedOutputStream","methodSignature":"<kanzi.io.CompressedOutputStream: write([BII)V>","javaLine":281,"bytecodeIndex":-1,"operationType":"loopNewArrSink","options":["jobs"],"optionCount":1,"originalStmt":"$stack62 = newarray (byte)[$stack52]","mayValues":[]},{"packageName":"kanzi.io","className":"CompressedOutputStream","methodSignature":"<kanzi.io.CompressedOutputStream: write([BII)V>","javaLine":268,"bytecodeIndex":-1,"operationType":"directlyNewArrSink","options":["blockSize"],"optionCount":1,"originalStmt":"$stack62 = newarray (byte)[$stack52]","mayValues":[]},{"packageName":"kanzi.io","className":"CompressedOutputStream","methodSignature":"<kanzi.io.CompressedOutputStream: write([BII)V>","javaLine":245,"bytecodeIndex":-1,"operationType":"loopNewArrSink","options":["checksum"],"optionCount":1,"originalStmt":"$stack62 = newarray (byte)[$stack52]","mayValues":[]},{"packageName":"kanzi.io","className":"CompressedOutputStream","methodSignature":"<kanzi.io.CompressedOutputStream: write([BII)V>","javaLine":268,"bytecodeIndex":-1,"operationType":"directlyNewArrSink","options":["entropy"],"optionCount":1,"originalStmt":"$stack62 = newarray (byte)[$stack52]","mayValues":[]},{"packageName":"kanzi.io","className":"CompressedOutputStream","methodSignature":"<kanzi.io.CompressedOutputStream: write([BII)V>","javaLine":245,"bytecodeIndex":-1,"operationType":"loopNewArrSink","options":["entropy"],"optionCount":1,"originalStmt":"$stack62 = newarray (byte)[$stack52]","mayValues":[]},{"packageName":"kanzi.io","className":"CompressedOutputStream","methodSignature":"<kanzi.io.CompressedOutputStream: write([BII)V>","javaLine":245,"bytecodeIndex":-1,"operationType":"loopNewArrSink","options":["transform"],"optionCount":1,"originalStmt":"$stack62 = newarray (byte)[$stack52]","mayValues":[]},{"packageName":"kanzi.io","className":"CompressedOutputStream","methodSignature":"<kanzi.io.CompressedOutputStream: write([BII)V>","javaLine":268,"bytecodeIndex":-1,"operationType":"directlyNewArrSink","options":["transform"],"optionCount":1,"originalStmt":"$stack62 = newarray (byte)[$stack52]","mayValues":[]},{"packageName":"kanzi.io","className":"CompressedOutputStream","methodSignature":"<kanzi.io.CompressedOutputStream: write([BII)V>","javaLine":245,"bytecodeIndex":-1,"operationType":"loopNewArrSink","options":["jobs"],"optionCount":1,"originalStmt":"$stack62 = newarray (byte)[$stack52]","mayValues":[]},{"packageName":"kanzi.io","className":"CompressedOutputStream","methodSignature":"<kanzi.io.CompressedOutputStream: write([BII)V>","javaLine":281,"bytecodeIndex":-1,"operationType":"loopNewArrSink","options":["checksum"],"optionCount":1,"originalStmt":"$stack62 = newarray (byte)[$stack52]","mayValues":[]},{"packageName":"kanzi.io","className":"CompressedOutputStream","methodSignature":"<kanzi.io.CompressedOutputStream: write([BII)V>","javaLine":245,"bytecodeIndex":-1,"operationType":"loopNewArrSink","options":["skipBlocks"],"optionCount":1,"originalStmt":"$stack62 = newarray (byte)[$stack52]","mayValues":[]}]},"optionList":["transform","entropy","skipBlocks","jobs","checksum","blockSize","verbosity"]}]