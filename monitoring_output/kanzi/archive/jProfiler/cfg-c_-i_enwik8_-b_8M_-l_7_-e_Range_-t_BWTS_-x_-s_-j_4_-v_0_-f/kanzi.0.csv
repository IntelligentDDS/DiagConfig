"Hot Spot","Self Time Difference (microseconds)","Self Time Base (microseconds)","Invocations Difference","Invocations Base"
"kanzi.entropy.BinaryEntropyEncoder.encodeByte(byte)",95890534,0,54252894,0
"kanzi.entropy.BinaryEntropyEncoder.encodeBit(int, int)",84328391,0,434023152,0
"java.lang.Thread.yield()",51890996,0,98767577,0
"kanzi.entropy.CMPredictor.update(int)",41674190,0,434023152,0
"kanzi.entropy.CMPredictor.get()",39741902,0,434023152,0
"kanzi.transform.LZCodec$LZPCodec.forward(kanzi.SliceByteArray, kanzi.SliceByteArray)",18642928,0,24,0
"kanzi.transform.TextCodec$TextCodec1.forward(kanzi.SliceByteArray, kanzi.SliceByteArray)",17180628,0,12,0
"kanzi.transform.LZCodec.differentInts(byte[ ], int, int)",16710101,0,185454732,0
"kanzi.io.CompressedOutputStream$EncodingTask.encodeBlock(kanzi.SliceByteArray, kanzi.SliceByteArray, int, long, int, int)",15739708,32867,11,1
"java.util.concurrent.atomic.AtomicInteger.get()",6900229,0,98767604,0
"kanzi.entropy.BinaryEntropyEncoder.encode(byte[ ], int, int)",5656518,0,12,0
"kanzi.util.hash.XXHash32.hash(byte[ ], int, int)",5635450,0,12,0
"kanzi.transform.LZCodec$LZPCodec.findMatch(byte[ ], int, int, int)",4374463,0,8554814,0
"kanzi.transform.TextCodec.isText(byte)",3870759,15240674,-120496,100005616
"kanzi.transform.DivSufSort.ssMultiKeyIntroSort(int, int, int, int)",3094353,7787177,37321,23318
"kanzi.Memory$LittleEndian.readInt32(byte[ ], int)",2263973,0,25028986,0
"kanzi.util.hash.XXHash32.round(int, int)",2187972,0,25000000,0
"kanzi.transform.TextCodec.isLowerCase(byte)",1854470,7055582,-120496,100005616
"kanzi.transform.DivSufSort.swapInSA(int, int)",1846596,4841531,4635411,62866167
"kanzi.transform.DivSufSort.ssInsertionSort(int, int, int, int)",1263752,2221062,177826,1170187
"kanzi.entropy.BinaryEntropyEncoder.flush()",1151152,0,5901164,0
"kanzi.transform.TextCodec$TextCodec1.emitWordIndex(byte[ ], int, int)",1105627,0,12255509,0
"kanzi.transform.DivSufSort.trIntroSort(int, int, int, int, kanzi.transform.DivSufSort$TRBudget)",698760,1403889,450813,1382349
"kanzi.transform.DivSufSort.ssCompare(int, int, int)",654727,3320133,1871158,30272617
"kanzi.transform.TextCodec$TextCodec1.emitSymbols(byte[ ], int, byte[ ], int, int, int)",538438,0,4591938,0
"kanzi.Memory$BigEndian.writeInt32(byte[ ], int, int)",524131,0,5901164,0
"kanzi.transform.DivSufSort.sortTypeBstar(int[ ], int[ ], int)",282773,683166,11,1
"kanzi.transform.TextCodec.isDelimiter(byte)",226096,1082185,-18973,13861126
"kanzi.transform.DivSufSort.trInsertionSort(int, int, int)",159653,600885,502341,2977117
"kanzi.transform.TextCodec.sameWords(byte[ ], int, byte[ ], int, int)",152213,1350314,-442473,12697965
"kanzi.transform.DivSufSort$Stack.pop()",142016,404963,840902,3947293
"kanzi.transform.TextCodec$TextCodec1.reset(int)",141000,0,12,0
"kanzi.transform.DivSufSort.trIlg(int)",101883,287614,499208,2923260
"kanzi.transform.TextCodec.computeStats(byte[ ], int, int, int[ ], boolean)",93961,147014,11,1
"kanzi.transform.DivSufSort.ssPivot(int, int, int, int)",93193,197945,202886,895009
"kanzi.transform.DivSufSort$Stack.push(int, int, int, int, int)",85192,243889,353228,2539457
"kanzi.transform.DivSufSort.trSort(int, int)",80783,232047,11,1
"kanzi.transform.BWT.forward(kanzi.SliceByteArray, kanzi.SliceByteArray)",71384,74951,11,1
"kanzi.Global.computeHistogramOrder0(byte[ ], int, int, int[ ], boolean)",69871,38273,-1016,1028
"kanzi.transform.Sequence.forward(kanzi.SliceByteArray, kanzi.SliceByteArray)",45007,0,12,0
"kanzi.transform.DivSufSort.ssIlg(int)",44394,89948,225376,879443
"kanzi.transform.TextCodec$DictEntry.<init>(byte[ ], int, int, int, int)",42313,39947,250880,524288
"kanzi.transform.DivSufSort.computeBWT(byte[ ], byte[ ], int[ ], int, int, int, int[ ], int)",40505,84152,11,1
"kanzi.transform.DivSufSort$TRBudget.check(int)",33483,109845,114006,1121148
"kanzi.transform.DivSufSort.ssMedian5(int, int, int, int, int, int, int)",28891,63508,97367,447834
"kanzi.transform.DivSufSort.ssMedian3(int, int, int, int, int)",17625,73526,110496,543208
"kanzi.transform.DivSufSort.ssPartition(int, int, int, int)",10619,98096,59678,437100
"kanzi.transform.TextCodec$TextCodec1.expandDictionary()",6080,0,1,0
"kanzi.transform.DivSufSort.trPivot(int[ ], int, int, int)",3162,111359,-68759,535018
"java.util.concurrent.ExecutorService.invokeAll(java.util.Collection)",2738,0,3,0
"kanzi.entropy.CMPredictor.<init>()",2630,0,12,0
"kanzi.transform.DivSufSort.reset()",1985,0,12,0
"java.nio.ByteOrder.nativeOrder()",1939,0,14,0
"kanzi.transform.DivSufSort.ssMergeBackward(int, int, int, int, int, int)",1710,934500,-460,2169
"java.util.Arrays.fill(int[ ], int)",1493,0,3075,0
"kanzi.transform.DivSufSort.ssCompare(int, int, int, int)",1138,0,10147,0
"kanzi.transform.LZCodec.<init>(java.util.Map)",1044,0,24,0
"kanzi.app.Kanzi.processCommandLine(java.lang.String[ ], java.util.Map)",964,0,1,0
"java.nio.file.Files.isRegularFile(java.nio.file.Path, java.nio.file.LinkOption[ ])",738,0,2,0
"kanzi.transform.DivSufSort.trMedian3(int[ ], int, int, int, int)",-5050,44027,-36819,335626
"kanzi.io.CompressedOutputStream.<init>(kanzi.OutputBitStream, java.util.Map)",-37572,43035,0,1
"kanzi.transform.DivSufSort.trPartition(int, int, int, int, int)",-100348,1290470,-68719,535262
"kanzi.Memory$BigEndian.writeLong64(byte[ ], int, long)",-149952,368975,-2579878,5283283
"kanzi.Memory$BigEndian.readLong64(byte[ ], int)",-191132,397993,-2562864,5266221
"kanzi.transform.DivSufSort.constructBWT(int[ ], int[ ], int, int, int[ ], int)",-209475,1683686,11,1
"kanzi.transform.ZRLT.forward(kanzi.SliceByteArray, kanzi.SliceByteArray)",-246319,246319,-1,1
"kanzi.bitstream.DefaultOutputBitStream.writeBits(byte[ ], int, int)",-367968,878841,-1005,1029
"kanzi.bitstream.DefaultOutputBitStream.pushCurrent()",-391595,844488,-2579878,5283283
"kanzi.transform.TextCodec$TextCodec2.emitSymbols(byte[ ], int, byte[ ], int, int, int)",-462712,462712,-4625539,4625539
"kanzi.transform.SBRT.forward(kanzi.SliceByteArray, kanzi.SliceByteArray)",-956931,956931,-1,1
"kanzi.transform.TextCodec$TextCodec2.emitWordIndex(byte[ ], int, int, int)",-1039165,1039165,-12697965,12697965
"kanzi.entropy.ANSRangeEncoder.encodeSymbol(int[ ], int, kanzi.entropy.ANSRangeEncoder$Symbol)",-2462807,2462807,-33678300,33678300
"kanzi.entropy.ANSRangeEncoder.encodeChunk(byte[ ], int, int)",-2831974,2831974,-1028,1028
"kanzi.transform.TextCodec$TextCodec2.forward(kanzi.SliceByteArray, kanzi.SliceByteArray)",-13464763,13464763,-1,1
