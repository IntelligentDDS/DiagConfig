"Hot Spot","Self Time Difference (microseconds)","Self Time Base (microseconds)","Invocations Difference","Invocations Base"
"kanzi.util.hash.XXHash32.hash(byte[ ], int, int)",4311056,0,763,0
"java.lang.Thread.yield()",3006189,0,5466829,0
"kanzi.Memory$LittleEndian.readInt32(byte[ ], int)",1736083,0,25000000,0
"kanzi.util.hash.XXHash32.round(int, int)",1685958,0,25000000,0
"kanzi.io.CompressedOutputStream$EncodingTask.encodeBlock(kanzi.SliceByteArray, kanzi.SliceByteArray, int, long, int, int)",905483,32867,762,1
"kanzi.bitstream.DefaultOutputBitStream.writeBits(byte[ ], int, int)",692266,878841,497,1029
"kanzi.bitstream.DefaultOutputBitStream.pushCurrent()",555698,844488,4105572,5283283
"java.util.concurrent.atomic.AtomicInteger.get()",386329,0,5468610,0
"kanzi.Memory$BigEndian.writeLong64(byte[ ], int, long)",275366,368975,4105572,5283283
"kanzi.Memory$BigEndian.readLong64(byte[ ], int)",242585,397993,4121392,5266221
"java.io.OutputStream.close()",152515,32813,0,1
"java.io.OutputStream.write(byte[ ], int, int)",56901,14262,5788,1460
"kanzi.Global.computeHistogramOrder0(byte[ ], int, int, int[ ], boolean)",52623,38273,-265,1028
"java.util.concurrent.ThreadPoolExecutor$Worker.run()",22990,0,3,0
"kanzi.Global.computeFirstOrderEntropy1024(int, int[ ])",13929,0,763,0
"java.util.concurrent.ExecutorService.invokeAll(java.util.Collection)",13598,0,254,0
"kanzi.Global.log2_1024(int)",12925,0,132470,0
"kanzi.io.CompressedOutputStream.processBlock()",8024,4846,254,1
"java.io.FileOutputStream.<init>(java.io.File)",6875,3031,0,1
"java.io.ByteArrayOutputStream.<init>(int)",6108,31715,762,1
"java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int)",5741,15822,7717,1818
"kanzi.bitstream.DefaultOutputBitStream.<init>(java.io.OutputStream, int)",4705,0,764,0
"java.util.HashMap.<init>(java.util.Map)",3336,0,763,0
"java.lang.Integer.numberOfLeadingZeros(int)",3233,0,41430,0
"java.io.InputStream.read(byte[ ], int, int)",2187,17930,0,1527
"kanzi.io.CompressedOutputStream$EncodingTask.call()",1442,0,1526,0
"kanzi.app.Kanzi.processCommandLine(java.lang.String[ ], java.util.Map)",1310,0,1,0
"kanzi.io.CompressedOutputStream$EncodingTask._get_skipBlocks(java.util.Map)",1254,0,763,0
"java.util.Map.put(java.lang.Object, java.lang.Object)",1199,0,2314,0
"kanzi.transform.Sequence.forward(kanzi.SliceByteArray, kanzi.SliceByteArray)",1157,0,763,0
"kanzi.bitstream.DefaultOutputBitStream.isClosed()",1090,0,9538,0
"kanzi.bitstream.DefaultOutputBitStream.close()",1069,0,764,0
"java.nio.file.Files.isRegularFile(java.nio.file.Path, java.nio.file.LinkOption[ ])",864,0,2,0
"java.lang.Integer.valueOf(int)",747,0,2298,0
"kanzi.entropy.NullEntropyEncoder.encode(byte[ ], int, int)",721,0,763,0
"kanzi.Global.positiveOrNull(int)",684,0,3895,0
"java.util.Map.getOrDefault(java.lang.Object, java.lang.Object)",683,0,765,0
"java.util.concurrent.atomic.AtomicBoolean.getAndSet(boolean)",678,0,256,0
"kanzi.Global.log2(int)",656,0,1526,0
"kanzi.transform.Sequence.getMaxEncodedLength(int)",593,0,1526,0
"java.io.PrintStream.println(java.lang.String)",496,0,7,0
"java.util.concurrent.atomic.AtomicInteger.incrementAndGet()",472,0,763,0
"kanzi.transform.NullTransform.doCopy(kanzi.SliceByteArray, kanzi.SliceByteArray)",424,0,763,0
"java.lang.Math.min(long, long)",406,0,1526,0
"java.util.List.iterator()",397,0,255,0
"java.util.List.toArray(java.lang.Object[ ])",390,0,255,0
"java.lang.Math.min(int, int)",383,0,2545,0
"java.lang.String.equals(java.lang.Object)",366,0,356,0
"java.lang.Boolean.valueOf(boolean)",344,0,770,0
"java.util.Iterator.hasNext()",342,0,1020,0
"kanzi.transform.Sequence.<init>(kanzi.ByteTransform[ ])",339,0,763,0
"java.lang.Character.valueOf(char)",335,0,1,0
"java.lang.String.split(java.lang.String)",306,0,1,0
"kanzi.entropy.NullEntropyEncoder.<init>(kanzi.OutputBitStream)",302,0,763,0
"java.util.List.add(java.lang.Object)",297,0,764,0
"java.util.ArrayList.<init>(int)",289,0,257,0
"kanzi.transform.NullTransform.forward(kanzi.SliceByteArray, kanzi.SliceByteArray)",285,0,763,0
"kanzi.Global.computeJobsPerTask(int[ ], int, int)",279,0,255,0
"kanzi.io.CompressedOutputStream$CustomByteArrayOutputStream.<init>(byte[ ], int)",272,0,763,0
"kanzi.app.Kanzi.createFileList(java.lang.String, java.util.List)",258,0,1,0
"kanzi.transform.NullTransform.<init>(java.util.Map)",258,0,763,0
"java.io.OutputStream.flush()",233,0,764,0
"java.util.Arrays.fill(int[ ], int)",229,0,255,0
"kanzi.io.CompressedOutputStream$EncodingTask.<init>(kanzi.SliceByteArray, kanzi.SliceByteArray, int, long, int, int, kanzi.OutputBitStream, kanzi.util.hash.XXHash32, java.util.concurrent.atomic.AtomicInteger, kanzi.Listener[ ], java.util.Map)",226,0,763,0
"java.util.Iterator.next()",217,0,764,0
"java.util.List.size()",190,0,513,0
"java.lang.Boolean.booleanValue()",188,0,768,0
"java.util.concurrent.Future.get()",181,0,762,0
"kanzi.transform.NullTransform.getMaxEncodedLength(int)",172,0,1526,0
"kanzi.bitstream.DefaultOutputBitStream.written()",150,0,766,0
"kanzi.transform.Sequence.getNbFunctions()",127,0,763,0
"kanzi.entropy.NullEntropyEncoder.dispose()",125,0,763,0
"kanzi.transform.Sequence.getSkipFlags()",124,0,763,0
"kanzi.transform.TransformFactory.<init>()",112,0,765,0
"kanzi.io.CompressedOutputStream$Status.<init>(int, int, java.lang.String)",103,0,763,0
"java.util.Map.keySet()",101,0,1,0
"kanzi.entropy.EntropyCodecFactory.<init>()",94,0,763,0
"java.lang.String.startsWith(java.lang.String)",84,0,75,0
"java.util.Set.iterator()",80,0,1,0
"java.lang.Math.max(int, int)",76,0,509,0
"kanzi.transform.TextCodec$DictEntry.<init>(byte[ ], int, int, int, int)",-39947,39947,-524288,524288
"kanzi.io.CompressedOutputStream.<init>(kanzi.OutputBitStream, java.util.Map)",-40265,43035,0,1
"kanzi.transform.DivSufSort.trMedian3(int[ ], int, int, int, int)",-44027,44027,-335626,335626
"kanzi.transform.DivSufSort.ssMedian5(int, int, int, int, int, int, int)",-63508,63508,-447834,447834
"kanzi.transform.DivSufSort.ssMedian3(int, int, int, int, int)",-73526,73526,-543208,543208
"kanzi.transform.BWT.forward(kanzi.SliceByteArray, kanzi.SliceByteArray)",-74951,74951,-1,1
"kanzi.transform.DivSufSort.computeBWT(byte[ ], byte[ ], int[ ], int, int, int, int[ ], int)",-84152,84152,-1,1
"kanzi.transform.DivSufSort.ssIlg(int)",-89948,89948,-879443,879443
"kanzi.transform.DivSufSort.ssPartition(int, int, int, int)",-98096,98096,-437100,437100
"kanzi.transform.DivSufSort$TRBudget.check(int)",-109845,109845,-1121148,1121148
"kanzi.transform.DivSufSort.trPivot(int[ ], int, int, int)",-111359,111359,-535018,535018
"kanzi.transform.TextCodec.computeStats(byte[ ], int, int, int[ ], boolean)",-147014,147014,-1,1
"kanzi.transform.DivSufSort.ssPivot(int, int, int, int)",-197945,197945,-895009,895009
"kanzi.transform.DivSufSort.trSort(int, int)",-232047,232047,-1,1
"kanzi.transform.DivSufSort$Stack.push(int, int, int, int, int)",-243889,243889,-2539457,2539457
"kanzi.transform.ZRLT.forward(kanzi.SliceByteArray, kanzi.SliceByteArray)",-246319,246319,-1,1
"kanzi.transform.DivSufSort.trIlg(int)",-287614,287614,-2923260,2923260
"kanzi.transform.DivSufSort$Stack.pop()",-404963,404963,-3947293,3947293
"kanzi.transform.TextCodec$TextCodec2.emitSymbols(byte[ ], int, byte[ ], int, int, int)",-462712,462712,-4625539,4625539
"kanzi.transform.DivSufSort.trInsertionSort(int, int, int)",-600885,600885,-2977117,2977117
"kanzi.transform.DivSufSort.sortTypeBstar(int[ ], int[ ], int)",-683166,683166,-1,1
"kanzi.transform.DivSufSort.ssMergeBackward(int, int, int, int, int, int)",-934500,934500,-2169,2169
"kanzi.transform.SBRT.forward(kanzi.SliceByteArray, kanzi.SliceByteArray)",-956931,956931,-1,1
"kanzi.transform.TextCodec$TextCodec2.emitWordIndex(byte[ ], int, int, int)",-1039165,1039165,-12697965,12697965
"kanzi.transform.TextCodec.isDelimiter(byte)",-1082185,1082185,-13861126,13861126
"kanzi.transform.DivSufSort.trPartition(int, int, int, int, int)",-1290470,1290470,-535262,535262
"kanzi.transform.TextCodec.sameWords(byte[ ], int, byte[ ], int, int)",-1350314,1350314,-12697965,12697965
"kanzi.transform.DivSufSort.trIntroSort(int, int, int, int, kanzi.transform.DivSufSort$TRBudget)",-1403889,1403889,-1382349,1382349
"kanzi.transform.DivSufSort.constructBWT(int[ ], int[ ], int, int, int[ ], int)",-1683686,1683686,-1,1
"kanzi.transform.DivSufSort.ssInsertionSort(int, int, int, int)",-2221062,2221062,-1170187,1170187
"kanzi.entropy.ANSRangeEncoder.encodeSymbol(int[ ], int, kanzi.entropy.ANSRangeEncoder$Symbol)",-2462807,2462807,-33678300,33678300
"kanzi.entropy.ANSRangeEncoder.encodeChunk(byte[ ], int, int)",-2831974,2831974,-1028,1028
"kanzi.transform.DivSufSort.ssCompare(int, int, int)",-3320133,3320133,-30272617,30272617
"kanzi.transform.DivSufSort.swapInSA(int, int)",-4841531,4841531,-62866167,62866167
"kanzi.transform.TextCodec.isLowerCase(byte)",-7055582,7055582,-100005616,100005616
"kanzi.transform.DivSufSort.ssMultiKeyIntroSort(int, int, int, int)",-7787177,7787177,-23318,23318
"kanzi.transform.TextCodec$TextCodec2.forward(kanzi.SliceByteArray, kanzi.SliceByteArray)",-13464763,13464763,-1,1
"kanzi.transform.TextCodec.isText(byte)",-15240674,15240674,-100005616,100005616
