"Hot Spot","Self Time Difference (microseconds)","Self Time Base (microseconds)","Invocations Difference","Invocations Base"
"kanzi.util.hash.XXHash32.hash(byte[ ], int, int)",3855284,0,6,0
"java.lang.Thread.yield()",1712749,0,3214995,0
"kanzi.Memory$LittleEndian.readInt32(byte[ ], int)",1589680,0,25000000,0
"kanzi.util.hash.XXHash32.round(int, int)",1562364,0,25000000,0
"kanzi.bitstream.DefaultOutputBitStream.writeBits(byte[ ], int, int)",1026332,878841,-1011,1029
"kanzi.bitstream.DefaultOutputBitStream.pushCurrent()",868139,844488,7216744,5283283
"kanzi.io.CompressedOutputStream$EncodingTask.encodeBlock(kanzi.SliceByteArray, kanzi.SliceByteArray, int, long, int, int)",507564,32867,5,1
"kanzi.Memory$BigEndian.writeLong64(byte[ ], int, long)",428279,368975,7216744,5283283
"kanzi.Memory$BigEndian.readLong64(byte[ ], int)",383676,397993,7233785,5266221
"java.util.concurrent.atomic.AtomicInteger.get()",234550,0,3215010,0
"java.io.OutputStream.close()",230364,32813,0,1
"java.io.OutputStream.write(byte[ ], int, int)",40351,14262,5031,1460
"java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int)",10589,15822,5829,1818
"kanzi.io.CompressedOutputStream.processBlock()",5232,4846,2,1
"java.nio.ByteOrder.nativeOrder()",2019,0,14,0
"java.util.concurrent.ExecutorService.invokeAll(java.util.Collection)",1685,0,3,0
"java.nio.file.Files.isRegularFile(java.nio.file.Path, java.nio.file.LinkOption[ ])",745,0,2,0
"kanzi.app.Kanzi.processCommandLine(java.lang.String[ ], java.util.Map)",539,0,1,0
"kanzi.transform.TransformFactory.getName(long)",491,0,1,0
"kanzi.bitstream.DefaultOutputBitStream.isClosed()",407,0,6516,0
"java.lang.Character.valueOf(char)",394,0,1,0
"kanzi.Global.positiveOrNull(int)",366,0,3895,0
"java.util.concurrent.ThreadPoolExecutor$Worker.run()",323,0,2,0
"java.lang.String.split(java.lang.String)",317,0,1,0
"java.lang.String.equals(java.lang.Object)",302,0,340,0
"java.lang.Math.min(int, int)",222,0,1536,0
"java.lang.StringBuilder.length()",220,0,1,0
"kanzi.app.Kanzi.createFileList(java.lang.String, java.util.List)",157,0,1,0
"kanzi.bitstream.DefaultOutputBitStream.<init>(java.io.OutputStream, int)",149,0,7,0
"java.util.HashMap.<init>(java.util.Map)",130,0,6,0
"java.util.Map.put(java.lang.Object, java.lang.Object)",92,0,42,0
"java.lang.String.startsWith(java.lang.String)",92,0,73,0
"java.lang.Integer.valueOf(int)",63,0,27,0
"java.lang.String.trim()",59,0,34,0
"java.util.Arrays.fill(int[ ], int)",55,0,3,0
"java.lang.Boolean.valueOf(boolean)",48,0,12,0
"kanzi.app.Kanzi.<clinit>()",48,0,1,0
"java.util.concurrent.atomic.AtomicInteger.incrementAndGet()",45,0,6,0
"java.lang.Integer.parseInt(java.lang.String)",45,0,4,0
"kanzi.io.CompressedOutputStream$EncodingTask.call()",43,0,12,0
"java.io.FileInputStream.<init>(java.lang.String)",41,0,1,0
"java.lang.String.toUpperCase()",39,0,7,0
"java.nio.file.Path.toString()",39,0,1,0
"java.lang.Math.min(long, long)",39,0,12,0
"java.nio.file.FileSystem.getPath(java.lang.String, java.lang.String[ ])",36,0,2,0
"kanzi.io.CompressedOutputStream$CustomByteArrayOutputStream.<init>(byte[ ], int)",35,0,6,0
"kanzi.io.CompressedOutputStream$EncodingTask._get_skipBlocks(java.util.Map)",34,0,6,0
"kanzi.transform.Sequence.forward(kanzi.SliceByteArray, kanzi.SliceByteArray)",33,0,6,0
"kanzi.entropy.NullEntropyEncoder.encode(byte[ ], int, int)",32,0,6,0
"java.nio.file.Files.isDirectory(java.nio.file.Path, java.nio.file.LinkOption[ ])",31,0,1,0
"java.lang.Long.valueOf(long)",30,0,2,0
"java.util.Map.getOrDefault(java.lang.Object, java.lang.Object)",27,0,8,0
"java.nio.file.FileSystems.getDefault()",24,0,2,0
"java.util.Map.remove(java.lang.Object)",23,0,10,0
"kanzi.Global.<clinit>()",23,0,1,0
"kanzi.Global.log2(int)",22,0,12,0
"java.nio.file.Files.size(java.nio.file.Path)",22,0,1,0
"kanzi.bitstream.DefaultOutputBitStream.close()",22,0,7,0
"kanzi.SliceByteArray.<init>(byte[ ], int, int)",22,0,2,0
"java.util.List.iterator()",22,0,4,0
"java.lang.StringBuilder.append(java.lang.String)",21,0,14,0
"java.util.concurrent.atomic.AtomicBoolean.getAndSet(boolean)",20,0,4,0
"kanzi.io.CompressedOutputStream._get_pool(java.util.Map)",20,0,1,0
"kanzi.Memory.<clinit>()",20,0,1,0
"java.util.Iterator.hasNext()",19,0,10,0
"java.util.Map.get(java.lang.Object)",19,0,9,0
"java.util.List.add(java.lang.Object)",19,0,7,0
"kanzi.transform.Sequence.getMaxEncodedLength(int)",18,0,12,0
"java.util.ArrayList.<init>(int)",18,0,5,0
"java.lang.StringBuilder.<init>()",18,0,6,0
"java.io.File.exists()",15,0,1,0
"kanzi.io.CompressedOutputStream.close()",15,0,1,0
"kanzi.io.CompressedOutputStream$Status.<init>(int, int, java.lang.String)",15,0,6,0
"kanzi.transform.NullTransform.doCopy(kanzi.SliceByteArray, kanzi.SliceByteArray)",15,0,6,0
"kanzi.io.CompressedOutputStream$EncodingTask.<init>(kanzi.SliceByteArray, kanzi.SliceByteArray, int, long, int, int, kanzi.OutputBitStream, kanzi.util.hash.XXHash32, java.util.concurrent.atomic.AtomicInteger, kanzi.Listener[ ], java.util.Map)",15,0,6,0
"java.lang.String.equalsIgnoreCase(java.lang.String)",14,0,9,0
"java.nio.file.Files.isHidden(java.nio.file.Path)",14,0,1,0
"java.nio.file.Path.toAbsolutePath()",13,0,2,0
"java.io.ByteArrayOutputStream.<init>(int)",8,31715,5,1
"java.io.InputStream.read(byte[ ], int, int)",-2071,17930,0,1527
"kanzi.io.CompressedOutputStream.<init>(kanzi.OutputBitStream, java.util.Map)",-34407,43035,0,1
"kanzi.Global.computeHistogramOrder0(byte[ ], int, int, int[ ], boolean)",-38273,38273,-1028,1028
"kanzi.transform.TextCodec$DictEntry.<init>(byte[ ], int, int, int, int)",-39947,39947,-524288,524288
"kanzi.transform.DivSufSort.trMedian3(int[ ], int, int, int, int)",-44027,44027,-335626,335626
"kanzi.transform.DivSufSort.ssMedian5(int, int, int, int, int, int, int)",-63508,63508,-447834,447834
"kanzi.transform.DivSufSort.ssMedian3(int, int, int, int, int)",-73526,73526,-543208,543208
"kanzi.transform.BWT.forward(kanzi.SliceByteArray, kanzi.SliceByteArray)",-74951,74951,-1,1
"kanzi.transform.DivSufSort.computeBWT(byte[ ], byte[ ], int[ ], int, int, int, int[ ], int)",-84152,84152,-1,1
"kanzi.transform.DivSufSort.ssIlg(int)",-89948,89948,-879443,879443
"kanzi.transform.DivSufSort.ssPartition(int, int, int, int)",-98096,98096,-437100,437100
"kanzi.transform.DivSufSort$TRBudget.check(int)",-109845,109845,-1121148,1121148
"kanzi.transform.DivSufSort.trPivot(int[ ], int, int, int)",-111359,111359,-535018,535018
"kanzi.transform.TextCodec.computeStats(byte[ ], int, int, int[ ], boolean)",-147014,147014,-1,1
"kanzi.transform.DivSufSort.ssPivot(int, int, int, int)",-197945,197945,-895009,895009
"kanzi.transform.DivSufSort.trSort(int, int)",-232047,232047,-1,1
"kanzi.transform.DivSufSort$Stack.push(int, int, int, int, int)",-243889,243889,-2539457,2539457
"kanzi.transform.ZRLT.forward(kanzi.SliceByteArray, kanzi.SliceByteArray)",-246319,246319,-1,1
"kanzi.transform.DivSufSort.trIlg(int)",-287614,287614,-2923260,2923260
"kanzi.transform.DivSufSort$Stack.pop()",-404963,404963,-3947293,3947293
"kanzi.transform.TextCodec$TextCodec2.emitSymbols(byte[ ], int, byte[ ], int, int, int)",-462712,462712,-4625539,4625539
"kanzi.transform.DivSufSort.trInsertionSort(int, int, int)",-600885,600885,-2977117,2977117
"kanzi.transform.DivSufSort.sortTypeBstar(int[ ], int[ ], int)",-683166,683166,-1,1
"kanzi.transform.DivSufSort.ssMergeBackward(int, int, int, int, int, int)",-934500,934500,-2169,2169
"kanzi.transform.SBRT.forward(kanzi.SliceByteArray, kanzi.SliceByteArray)",-956931,956931,-1,1
"kanzi.transform.TextCodec$TextCodec2.emitWordIndex(byte[ ], int, int, int)",-1039165,1039165,-12697965,12697965
"kanzi.transform.TextCodec.isDelimiter(byte)",-1082185,1082185,-13861126,13861126
"kanzi.transform.DivSufSort.trPartition(int, int, int, int, int)",-1290470,1290470,-535262,535262
"kanzi.transform.TextCodec.sameWords(byte[ ], int, byte[ ], int, int)",-1350314,1350314,-12697965,12697965
"kanzi.transform.DivSufSort.trIntroSort(int, int, int, int, kanzi.transform.DivSufSort$TRBudget)",-1403889,1403889,-1382349,1382349
"kanzi.transform.DivSufSort.constructBWT(int[ ], int[ ], int, int, int[ ], int)",-1683686,1683686,-1,1
"kanzi.transform.DivSufSort.ssInsertionSort(int, int, int, int)",-2221062,2221062,-1170187,1170187
"kanzi.entropy.ANSRangeEncoder.encodeSymbol(int[ ], int, kanzi.entropy.ANSRangeEncoder$Symbol)",-2462807,2462807,-33678300,33678300
"kanzi.entropy.ANSRangeEncoder.encodeChunk(byte[ ], int, int)",-2831974,2831974,-1028,1028
"kanzi.transform.DivSufSort.ssCompare(int, int, int)",-3320133,3320133,-30272617,30272617
"kanzi.transform.DivSufSort.swapInSA(int, int)",-4841531,4841531,-62866167,62866167
"kanzi.transform.TextCodec.isLowerCase(byte)",-7055582,7055582,-100005616,100005616
"kanzi.transform.DivSufSort.ssMultiKeyIntroSort(int, int, int, int)",-7787177,7787177,-23318,23318
"kanzi.transform.TextCodec$TextCodec2.forward(kanzi.SliceByteArray, kanzi.SliceByteArray)",-13464763,13464763,-1,1
"kanzi.transform.TextCodec.isText(byte)",-15240674,15240674,-100005616,100005616
