"Hot Spot","Self Time Difference (microseconds)","Self Time Base (microseconds)","Invocations Difference","Invocations Base"
"kanzi.transform.ROLZCodec$ROLZEncoder.encode9Bits(int)",45153052,0,32717036,0
"kanzi.transform.ROLZCodec$ROLZEncoder.encodeBit(int)",39491011,0,317329489,0
"kanzi.transform.ROLZCodec$ROLZCodec2.findMatch(kanzi.SliceByteArray, int)",28863782,0,32717000,0
"kanzi.transform.ROLZCodec$ROLZCodec2.forward(kanzi.SliceByteArray, kanzi.SliceByteArray)",16486232,0,6,0
"java.lang.Thread.yield()",13673007,0,23665293,0
"kanzi.transform.TextCodec.isText(byte)",11010256,15240674,644,100005616
"kanzi.transform.TextCodec$TextCodec2.forward(kanzi.SliceByteArray, kanzi.SliceByteArray)",9745707,13464763,5,1
"kanzi.transform.ROLZCodec.hash(byte[ ], int)",8664067,0,32717000,0
"kanzi.transform.ROLZCodec.getKey(byte[ ], int)",8446039,0,32717000,0
"kanzi.Memory$LittleEndian.readInt32(byte[ ], int)",6415326,0,55315660,0
"kanzi.transform.TextCodec.isLowerCase(byte)",5104691,7055582,644,100005616
"kanzi.io.CompressedOutputStream$EncodingTask.encodeBlock(kanzi.SliceByteArray, kanzi.SliceByteArray, int, long, int, int)",4767118,32867,5,1
"kanzi.transform.ROLZCodec$ROLZEncoder.setContext(byte)",4195010,0,37292263,0
"kanzi.transform.ROLZCodec$ROLZEncoder.encodeBits(int, int)",3736451,0,4575233,0
"kanzi.Memory$LittleEndian.readInt16(byte[ ], int)",3734664,0,32717000,0
"java.lang.Math.min(int, int)",3715249,0,32718552,0
"java.util.concurrent.atomic.AtomicInteger.get()",1911149,0,23665306,0
"kanzi.transform.ROLZCodec$ROLZEncoder.setMode(int)",1026787,0,9150478,0
"kanzi.Memory$BigEndian.writeInt32(byte[ ], int, int)",795689,0,6637557,0
"java.lang.Integer.numberOfTrailingZeros(int)",711456,0,6407533,0
"kanzi.transform.TextCodec.isDelimiter(byte)",570067,1082185,-3,13861126
"kanzi.transform.TextCodec$TextCodec2.emitWordIndex(byte[ ], int, int, int)",509539,1039165,-311443,12697965
"kanzi.transform.TextCodec.sameWords(byte[ ], int, byte[ ], int, int)",452554,1350314,-311443,12697965
"kanzi.transform.TextCodec$TextCodec2.reset(int)",263550,30492,5,1
"kanzi.transform.TextCodec$TextCodec2.emitSymbols(byte[ ], int, byte[ ], int, int, int)",243652,462712,-25888,4625539
"kanzi.transform.TextCodec.computeStats(byte[ ], int, int, int[ ], boolean)",210978,147014,5,1
"kanzi.Global.computeHistogramOrder0(byte[ ], int, int, int[ ], boolean)",158245,38273,-1022,1028
"kanzi.transform.ROLZCodec$ROLZCodec2.<init>(int, java.util.Map)",141998,0,6,0
"kanzi.transform.Sequence.forward(kanzi.SliceByteArray, kanzi.SliceByteArray)",127424,0,6,0
"kanzi.transform.TextCodec$DictEntry.<init>(byte[ ], int, int, int, int)",117639,39947,257024,524288
"java.util.concurrent.ExecutorService.invokeAll(java.util.Collection)",9429,0,1,0
"java.util.Map.put(java.lang.Object, java.lang.Object)",4253,0,54,0
"kanzi.transform.ROLZCodec$ROLZEncoder.reset()",3024,0,6,0
"kanzi.transform.ROLZCodec.<init>(java.util.Map)",2546,0,6,0
"java.nio.file.Files.isRegularFile(java.nio.file.Path, java.nio.file.LinkOption[ ])",675,0,2,0
"kanzi.transform.TextCodec.isUpperCase(byte)",652,0,5487,0
"kanzi.transform.TransformFactory.getTypeToken(java.lang.String)",491,0,6,0
"kanzi.app.Kanzi.processCommandLine(java.lang.String[ ], java.util.Map)",460,0,1,0
"kanzi.Global.log2_1024(int)",455,0,1215,0
"kanzi.Global.computeFirstOrderEntropy1024(int, int[ ])",425,0,6,0
"kanzi.transform.TextCodec.<clinit>()",393,0,1,0
"java.lang.String.split(java.lang.String)",361,0,3,0
"kanzi.Global.positiveOrNull(int)",324,0,3895,0
"java.lang.Integer.numberOfLeadingZeros(int)",294,0,1125,0
"java.lang.Character.valueOf(char)",285,0,1,0
"java.lang.String.toUpperCase()",259,0,17,0
"java.lang.String.equals(java.lang.Object)",250,0,348,0
"kanzi.bitstream.DefaultOutputBitStream.isClosed()",203,0,1745,0
"kanzi.transform.ROLZCodec$ROLZEncoder.<init>(int, int, kanzi.SliceByteArray)",189,0,6,0
"kanzi.app.Kanzi.createFileList(java.lang.String, java.util.List)",152,0,1,0
"java.util.Map.getOrDefault(java.lang.Object, java.lang.Object)",135,0,44,0
"kanzi.bitstream.DefaultOutputBitStream.<init>(java.io.OutputStream, int)",122,0,7,0
"java.util.HashMap.<init>(java.util.Map)",83,0,6,0
"kanzi.transform.Sequence.getMaxEncodedLength(int)",77,0,12,0
"java.lang.String.startsWith(java.lang.String)",75,0,73,0
"java.lang.Integer.valueOf(int)",73,0,39,0
"java.lang.String.getBytes()",70,0,4,0
"kanzi.transform.FSDCodec.forward(kanzi.SliceByteArray, kanzi.SliceByteArray)",61,0,6,0
"java.lang.Math.max(int, int)",59,0,42,0
"kanzi.SliceByteArray.<init>(byte[ ], int, int)",56,0,8,0
"kanzi.transform.Sequence.<init>(kanzi.ByteTransform[ ])",53,0,6,0
"kanzi.app.Kanzi.<clinit>()",50,0,1,0
"kanzi.transform.ROLZCodec.forward(kanzi.SliceByteArray, kanzi.SliceByteArray)",48,0,6,0
"java.lang.Integer.parseInt(java.lang.String)",46,0,4,0
"java.lang.String.contains(java.lang.CharSequence)",44,0,6,0
"java.lang.Boolean.valueOf(boolean)",43,0,18,0
"java.nio.file.FileSystem.getPath(java.lang.String, java.lang.String[ ])",41,0,2,0
"kanzi.io.CompressedOutputStream.<init>(kanzi.OutputBitStream, java.util.Map)",-35376,43035,0,1
"kanzi.transform.DivSufSort.trMedian3(int[ ], int, int, int, int)",-44027,44027,-335626,335626
"kanzi.transform.DivSufSort.ssMedian5(int, int, int, int, int, int, int)",-63508,63508,-447834,447834
"kanzi.Memory$BigEndian.writeLong64(byte[ ], int, long)",-72613,368975,-1964485,5283283
"kanzi.transform.DivSufSort.ssMedian3(int, int, int, int, int)",-73526,73526,-543208,543208
"kanzi.transform.BWT.forward(kanzi.SliceByteArray, kanzi.SliceByteArray)",-74951,74951,-1,1
"kanzi.transform.DivSufSort.computeBWT(byte[ ], byte[ ], int[ ], int, int, int, int[ ], int)",-84152,84152,-1,1
"kanzi.transform.DivSufSort.ssIlg(int)",-89948,89948,-879443,879443
"kanzi.transform.DivSufSort.ssPartition(int, int, int, int)",-98096,98096,-437100,437100
"kanzi.Memory$BigEndian.readLong64(byte[ ], int)",-107475,397993,-1947435,5266221
"kanzi.transform.DivSufSort$TRBudget.check(int)",-109845,109845,-1121148,1121148
"kanzi.transform.DivSufSort.trPivot(int[ ], int, int, int)",-111359,111359,-535018,535018
"kanzi.bitstream.DefaultOutputBitStream.writeBits(byte[ ], int, int)",-154248,878841,-1017,1029
"kanzi.transform.DivSufSort.ssPivot(int, int, int, int)",-197945,197945,-895009,895009
"kanzi.bitstream.DefaultOutputBitStream.pushCurrent()",-201943,844488,-1964485,5283283
"kanzi.transform.DivSufSort.trSort(int, int)",-232047,232047,-1,1
"kanzi.transform.DivSufSort$Stack.push(int, int, int, int, int)",-243889,243889,-2539457,2539457
"kanzi.transform.ZRLT.forward(kanzi.SliceByteArray, kanzi.SliceByteArray)",-246319,246319,-1,1
"kanzi.transform.DivSufSort.trIlg(int)",-287614,287614,-2923260,2923260
"kanzi.transform.DivSufSort$Stack.pop()",-404963,404963,-3947293,3947293
"kanzi.transform.DivSufSort.trInsertionSort(int, int, int)",-600885,600885,-2977117,2977117
"kanzi.transform.DivSufSort.sortTypeBstar(int[ ], int[ ], int)",-683166,683166,-1,1
"kanzi.transform.DivSufSort.ssMergeBackward(int, int, int, int, int, int)",-934500,934500,-2169,2169
"kanzi.transform.SBRT.forward(kanzi.SliceByteArray, kanzi.SliceByteArray)",-956931,956931,-1,1
"kanzi.transform.DivSufSort.trPartition(int, int, int, int, int)",-1290470,1290470,-535262,535262
"kanzi.transform.DivSufSort.trIntroSort(int, int, int, int, kanzi.transform.DivSufSort$TRBudget)",-1403889,1403889,-1382349,1382349
"kanzi.transform.DivSufSort.constructBWT(int[ ], int[ ], int, int, int[ ], int)",-1683686,1683686,-1,1
"kanzi.transform.DivSufSort.ssInsertionSort(int, int, int, int)",-2221062,2221062,-1170187,1170187
"kanzi.entropy.ANSRangeEncoder.encodeSymbol(int[ ], int, kanzi.entropy.ANSRangeEncoder$Symbol)",-2462807,2462807,-33678300,33678300
"kanzi.entropy.ANSRangeEncoder.encodeChunk(byte[ ], int, int)",-2831974,2831974,-1028,1028
"kanzi.transform.DivSufSort.ssCompare(int, int, int)",-3320133,3320133,-30272617,30272617
"kanzi.transform.DivSufSort.swapInSA(int, int)",-4841531,4841531,-62866167,62866167
"kanzi.transform.DivSufSort.ssMultiKeyIntroSort(int, int, int, int)",-7787177,7787177,-23318,23318
