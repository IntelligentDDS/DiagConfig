"Hot Spot","Self Time Difference (microseconds)","Self Time Base (microseconds)","Invocations Difference","Invocations Base"
"kanzi.transform.LZCodec$LZXCodec.forward(kanzi.SliceByteArray, kanzi.SliceByteArray)",21935476,0,24,0
"kanzi.transform.LZCodec$LZXCodec.hash(byte[ ], int)",17388160,0,59477226,0
"kanzi.transform.TextCodec.isText(byte)",13905539,15240674,2963,100005616
"kanzi.transform.TextCodec$TextCodec2.forward(kanzi.SliceByteArray, kanzi.SliceByteArray)",11871064,13464763,23,1
"kanzi.util.hash.XXHash32.hash(byte[ ], int, int)",8158465,0,24,0
"kanzi.Memory$LittleEndian.readLong64(byte[ ], int)",7911778,0,59477226,0
"java.lang.Thread.yield()",7429274,0,10742050,0
"kanzi.transform.TextCodec.isLowerCase(byte)",6375329,7055582,2963,100005616
"kanzi.transform.LZCodec.differentInts(byte[ ], int, int)",4024083,0,23913136,0
"java.lang.Math.max(int, int)",3925984,0,27785069,0
"kanzi.transform.LZCodec$LZXCodec.findMatch(byte[ ], int, int, int)",3230763,0,6529224,0
"kanzi.util.hash.XXHash32.round(int, int)",3133188,0,25000000,0
"kanzi.Memory$LittleEndian.readInt32(byte[ ], int)",3125289,0,25000000,0
"kanzi.io.CompressedOutputStream$EncodingTask.encodeBlock(kanzi.SliceByteArray, kanzi.SliceByteArray, int, long, int, int)",2890737,32867,23,1
"kanzi.bitstream.DefaultOutputBitStream.writeBits(long, int)",2003907,17816,9766925,211095
"kanzi.entropy.HuffmanEncoder.encode(byte[ ], int, int)",1708910,0,24,0
"java.lang.Math.min(int, int)",1417062,0,10140318,0
"java.util.concurrent.atomic.AtomicInteger.get()",1154923,0,10742101,0
"kanzi.bitstream.DefaultOutputBitStream.pushCurrent()",1124615,844488,2508641,5283283
"kanzi.transform.LZCodec$LZXCodec.emitLiterals(byte[ ], int, byte[ ], int, int)",1107322,0,2679607,0
"kanzi.transform.TextCodec.isDelimiter(byte)",882862,1082185,-10,13861126
"kanzi.transform.TextCodec.computeStats(byte[ ], int, int, int[ ], boolean)",869596,147014,23,1
"kanzi.transform.TextCodec.sameWords(byte[ ], int, byte[ ], int, int)",625038,1350314,-808517,12697965
"kanzi.transform.LZCodec$LZXCodec.arrayChunkCopy(byte[ ], int, byte[ ], int)",620285,0,4521859,0
"kanzi.transform.TextCodec$TextCodec2.emitWordIndex(byte[ ], int, int, int)",598547,1039165,-808517,12697965
"kanzi.Memory$BigEndian.writeLong64(byte[ ], int, long)",541266,368975,2508641,5283283
"kanzi.transform.TextCodec$TextCodec2.emitSymbols(byte[ ], int, byte[ ], int, int, int)",335624,462712,1533,4625539
"kanzi.transform.TextCodec$TextCodec2.reset(int)",216048,30492,23,1
"kanzi.Global.computeHistogramOrder0(byte[ ], int, int, int[ ], boolean)",205187,38273,1354,1028
"kanzi.transform.LZCodec$LZXCodec.emitLength(byte[ ], int, int)",180421,0,1347845,0
"kanzi.entropy.ExpGolombEncoder.encodeByte(byte)",178163,0,593868,0
"kanzi.transform.TextCodec$DictEntry.<init>(byte[ ], int, int, int, int)",171680,39947,959488,524288
"kanzi.entropy.HuffmanEncoder.updateFrequencies(int[ ])",155750,0,2358,0
"kanzi.transform.TextCodec$TextCodec2.expandDictionary()",143135,29214,22,1
"java.util.Arrays.sort(int[ ], int, int)",70549,0,2358,0
"kanzi.bitstream.DefaultOutputBitStream.writeBit(int)",34633,0,269570,0
"kanzi.transform.Sequence.forward(kanzi.SliceByteArray, kanzi.SliceByteArray)",25463,0,24,0
"kanzi.entropy.HuffmanEncoder.computeInPlaceSizesPhase1(int[ ], int)",21249,0,2358,0
"kanzi.entropy.HuffmanEncoder.computeCodeLengths(int[ ], int)",19737,0,2358,0
"kanzi.entropy.HuffmanCommon.generateCanonicalCodes(short[ ], int[ ], int[ ], int)",18248,0,2358,0
"kanzi.entropy.HuffmanEncoder.computeInPlaceSizesPhase2(int[ ], int)",17919,0,2358,0
"java.util.concurrent.ExecutorService.invokeAll(java.util.Collection)",12516,0,3,0
"kanzi.transform.LZCodec.<init>(java.util.Map)",2680,0,24,0
"java.lang.Short.valueOf(short)",1848,0,72,0
"kanzi.Global.log2_1024(int)",1336,0,4770,0
"kanzi.Global.computeFirstOrderEntropy1024(int, int[ ])",1250,0,24,0
"kanzi.app.Kanzi.processCommandLine(java.lang.String[ ], java.util.Map)",1195,0,1,0
"java.util.concurrent.ThreadPoolExecutor$Worker.run()",1139,0,8,0
"java.nio.file.Files.isRegularFile(java.nio.file.Path, java.nio.file.LinkOption[ ])",728,0,2,0
"java.util.Map.put(java.lang.Object, java.lang.Object)",618,0,169,0
"java.lang.Integer.numberOfLeadingZeros(int)",618,0,3100,0
"kanzi.transform.TextCodec.isUpperCase(byte)",580,0,5487,0
"java.io.PrintStream.println(java.lang.String)",468,0,7,0
"kanzi.Global.positiveOrNull(int)",467,0,3895,0
"kanzi.entropy.ExpGolombEncoder.<init>(kanzi.OutputBitStream, boolean)",465,0,2358,0
"kanzi.bitstream.DefaultOutputBitStream.isClosed()",440,0,2268,0
"java.util.Map.getOrDefault(java.lang.Object, java.lang.Object)",380,0,194,0
"java.lang.Character.valueOf(char)",363,0,1,0
"java.lang.String.split(java.lang.String)",361,0,3,0
"kanzi.transform.TextCodec.<clinit>()",347,0,1,0
"java.util.HashMap.<init>(java.util.Map)",342,0,24,0
"java.lang.String.equals(java.lang.Object)",333,0,432,0
"kanzi.entropy.HuffmanEncoder.<init>(kanzi.OutputBitStream, int)",274,0,24,0
"kanzi.app.Kanzi.createFileList(java.lang.String, java.util.List)",208,0,1,0
"kanzi.bitstream.DefaultOutputBitStream.<init>(java.io.OutputStream, int)",199,0,25,0
"java.lang.Integer.valueOf(int)",199,0,129,0
"kanzi.bitstream.DefaultOutputBitStream.close()",158,0,25,0
"kanzi.transform.Sequence.getMaxEncodedLength(int)",141,0,48,0
"java.lang.String.toUpperCase()",118,0,35,0
"kanzi.io.CompressedOutputStream.<init>(kanzi.OutputBitStream, java.util.Map)",-38651,43035,0,1
"kanzi.transform.DivSufSort.trMedian3(int[ ], int, int, int, int)",-44027,44027,-335626,335626
"kanzi.transform.DivSufSort.ssMedian5(int, int, int, int, int, int, int)",-63508,63508,-447834,447834
"kanzi.transform.DivSufSort.ssMedian3(int, int, int, int, int)",-73526,73526,-543208,543208
"kanzi.Memory$BigEndian.readLong64(byte[ ], int)",-73962,397993,-1727298,5266221
"kanzi.transform.BWT.forward(kanzi.SliceByteArray, kanzi.SliceByteArray)",-74951,74951,-1,1
"kanzi.bitstream.DefaultOutputBitStream.writeBits(byte[ ], int, int)",-82535,878841,-1005,1029
"kanzi.transform.DivSufSort.computeBWT(byte[ ], byte[ ], int[ ], int, int, int, int[ ], int)",-84152,84152,-1,1
"kanzi.transform.DivSufSort.ssIlg(int)",-89948,89948,-879443,879443
"kanzi.transform.DivSufSort.ssPartition(int, int, int, int)",-98096,98096,-437100,437100
"kanzi.transform.DivSufSort$TRBudget.check(int)",-109845,109845,-1121148,1121148
"kanzi.transform.DivSufSort.trPivot(int[ ], int, int, int)",-111359,111359,-535018,535018
"kanzi.transform.DivSufSort.ssPivot(int, int, int, int)",-197945,197945,-895009,895009
"kanzi.transform.DivSufSort.trSort(int, int)",-232047,232047,-1,1
"kanzi.transform.DivSufSort$Stack.push(int, int, int, int, int)",-243889,243889,-2539457,2539457
"kanzi.transform.ZRLT.forward(kanzi.SliceByteArray, kanzi.SliceByteArray)",-246319,246319,-1,1
"kanzi.transform.DivSufSort.trIlg(int)",-287614,287614,-2923260,2923260
"kanzi.transform.DivSufSort$Stack.pop()",-404963,404963,-3947293,3947293
"kanzi.transform.DivSufSort.trInsertionSort(int, int, int)",-600885,600885,-2977117,2977117
"kanzi.transform.DivSufSort.sortTypeBstar(int[ ], int[ ], int)",-683166,683166,-1,1
"kanzi.transform.DivSufSort.ssMergeBackward(int, int, int, int, int, int)",-934500,934500,-2169,2169
"kanzi.transform.SBRT.forward(kanzi.SliceByteArray, kanzi.SliceByteArray)",-956931,956931,-1,1
"kanzi.transform.DivSufSort.trPartition(int, int, int, int, int)",-1290470,1290470,-535262,535262
"kanzi.transform.DivSufSort.trIntroSort(int, int, int, int, kanzi.transform.DivSufSort$TRBudget)",-1403889,1403889,-1382349,1382349
"kanzi.transform.DivSufSort.constructBWT(int[ ], int[ ], int, int, int[ ], int)",-1683686,1683686,-1,1
"kanzi.transform.DivSufSort.ssInsertionSort(int, int, int, int)",-2221062,2221062,-1170187,1170187
"kanzi.entropy.ANSRangeEncoder.encodeSymbol(int[ ], int, kanzi.entropy.ANSRangeEncoder$Symbol)",-2462807,2462807,-33678300,33678300
"kanzi.entropy.ANSRangeEncoder.encodeChunk(byte[ ], int, int)",-2831974,2831974,-1028,1028
"kanzi.transform.DivSufSort.ssCompare(int, int, int)",-3320133,3320133,-30272617,30272617
"kanzi.transform.DivSufSort.swapInSA(int, int)",-4841531,4841531,-62866167,62866167
"kanzi.transform.DivSufSort.ssMultiKeyIntroSort(int, int, int, int)",-7787177,7787177,-23318,23318
