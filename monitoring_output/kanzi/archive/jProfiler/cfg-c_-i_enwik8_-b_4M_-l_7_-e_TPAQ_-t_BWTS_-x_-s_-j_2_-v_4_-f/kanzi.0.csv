"Hot Spot","Self Time Difference (microseconds)","Self Time Base (microseconds)","Invocations Difference","Invocations Base"
"kanzi.entropy.BinaryEntropyEncoder.encodeByte(byte)",78783947,0,55761270,0
"kanzi.entropy.BinaryEntropyEncoder.encodeBit(int, int)",66169650,0,446090160,0
"kanzi.entropy.CMPredictor.update(int)",32441770,0,446090160,0
"kanzi.entropy.CMPredictor.get()",31233609,0,446090160,0
"kanzi.transform.LZCodec$LZPCodec.forward(kanzi.SliceByteArray, kanzi.SliceByteArray)",14828630,0,48,0
"kanzi.transform.TextCodec$TextCodec1.forward(kanzi.SliceByteArray, kanzi.SliceByteArray)",13144276,0,24,0
"kanzi.transform.LZCodec.differentInts(byte[ ], int, int)",12513132,0,184532239,0
"kanzi.entropy.BinaryEntropyEncoder.encode(byte[ ], int, int)",4702168,0,24,0
"kanzi.util.hash.XXHash32.hash(byte[ ], int, int)",4251632,0,24,0
"kanzi.transform.LZCodec$LZPCodec.findMatch(byte[ ], int, int, int)",3401621,0,8432272,0
"java.lang.Thread.yield()",1734810,0,3227095,0
"kanzi.Memory$LittleEndian.readInt32(byte[ ], int)",1586824,0,25029317,0
"kanzi.util.hash.XXHash32.round(int, int)",1521022,0,25000000,0
"kanzi.entropy.BinaryEntropyEncoder.flush()",923152,0,6109258,0
"kanzi.transform.TextCodec$TextCodec1.emitWordIndex(byte[ ], int, int)",823773,0,12019367,0
"kanzi.transform.DivSufSort.ssInsertionSort(int, int, int, int)",565204,2221062,289267,1170187
"kanzi.io.CompressedOutputStream$EncodingTask.encodeBlock(kanzi.SliceByteArray, kanzi.SliceByteArray, int, long, int, int)",525175,32867,23,1
"kanzi.Memory$BigEndian.writeInt32(byte[ ], int, int)",410818,0,6109258,0
"kanzi.transform.TextCodec$TextCodec1.emitSymbols(byte[ ], int, byte[ ], int, int, int)",409176,0,4600207,0
"java.util.concurrent.atomic.AtomicInteger.get()",243793,0,3227155,0
"kanzi.transform.DivSufSort.sortTypeBstar(int[ ], int[ ], int)",91697,683166,23,1
"kanzi.transform.TextCodec$TextCodec1.reset(int)",86894,0,24,0
"kanzi.transform.TextCodec$TextCodec1.expandDictionary()",77947,0,26,0
"kanzi.Global.computeHistogramOrder0(byte[ ], int, int, int[ ], boolean)",70746,38273,-1004,1028
"kanzi.transform.TextCodec$DictEntry.<init>(byte[ ], int, int, int, int)",68879,39947,992256,524288
"kanzi.transform.DivSufSort.computeBWT(byte[ ], byte[ ], int[ ], int, int, int, int[ ], int)",59442,84152,23,1
"kanzi.transform.TextCodec.computeStats(byte[ ], int, int, int[ ], boolean)",39717,147014,23,1
"kanzi.transform.DivSufSort.ssPivot(int, int, int, int)",26179,197945,243434,895009
"kanzi.transform.DivSufSort.ssIlg(int)",16749,89948,303923,879443
"kanzi.transform.DivSufSort$Stack.pop()",10948,404963,957417,3947293
"kanzi.transform.DivSufSort.ssMedian5(int, int, int, int, int, int, int)",10478,63508,112947,447834
"kanzi.transform.DivSufSort.reset()",10073,0,24,0
"kanzi.transform.DivSufSort.trIntroSort(int, int, int, int, kanzi.transform.DivSufSort$TRBudget)",3688,1403889,559670,1382349
"kanzi.entropy.CMPredictor.<init>()",3398,0,24,0
"kanzi.transform.Sequence.forward(kanzi.SliceByteArray, kanzi.SliceByteArray)",3268,0,24,0
"java.io.PrintStream.println(java.lang.String)",2543,0,48,0
"java.util.concurrent.ExecutorService.invokeAll(java.util.Collection)",2343,0,12,0
"java.util.Arrays.fill(int[ ], int)",1657,0,6156,0
"kanzi.transform.DivSufSort.<init>()",1409,0,24,0
"kanzi.transform.DivSufSort.trIlg(int)",1374,287614,499681,2923260
"kanzi.transform.LZCodec.<init>(java.util.Map)",1308,0,48,0
"kanzi.app.Kanzi.processCommandLine(java.lang.String[ ], java.util.Map)",1057,0,1,0
"java.util.concurrent.ThreadPoolExecutor$Worker.run()",1046,0,2,0
"kanzi.transform.DivSufSort.trSort(int, int)",-433,232047,23,1
"kanzi.transform.DivSufSort.ssMedian3(int, int, int, int, int)",-1971,73526,125690,543208
"kanzi.transform.DivSufSort$Stack.push(int, int, int, int, int)",-3732,243889,322926,2539457
"kanzi.transform.DivSufSort$TRBudget.check(int)",-4798,109845,61333,1121148
"kanzi.transform.DivSufSort.ssPartition(int, int, int, int)",-16847,98096,50095,437100
"kanzi.transform.DivSufSort.trMedian3(int[ ], int, int, int, int)",-18420,44027,-80085,335626
"kanzi.transform.BWT.forward(kanzi.SliceByteArray, kanzi.SliceByteArray)",-22269,74951,23,1
"kanzi.transform.DivSufSort.trInsertionSort(int, int, int)",-34002,600885,492011,2977117
"kanzi.io.CompressedOutputStream.<init>(kanzi.OutputBitStream, java.util.Map)",-36807,43035,0,1
"kanzi.transform.DivSufSort.trPivot(int[ ], int, int, int)",-39105,111359,-140802,535018
"kanzi.transform.TextCodec.isDelimiter(byte)",-51528,1082185,-34543,13861126
"kanzi.transform.DivSufSort.ssMultiKeyIntroSort(int, int, int, int)",-150342,7787177,75853,23318
"kanzi.transform.ZRLT.forward(kanzi.SliceByteArray, kanzi.SliceByteArray)",-246319,246319,-1,1
"kanzi.Memory$BigEndian.writeLong64(byte[ ], int, long)",-266127,368975,-3740729,5283283
"kanzi.Memory$BigEndian.readLong64(byte[ ], int)",-296929,397993,-3723770,5266221
"kanzi.transform.TextCodec.sameWords(byte[ ], int, byte[ ], int, int)",-303657,1350314,-678623,12697965
"kanzi.transform.TextCodec$TextCodec2.emitSymbols(byte[ ], int, byte[ ], int, int, int)",-462712,462712,-4625539,4625539
"kanzi.transform.DivSufSort.swapInSA(int, int)",-480783,4841531,-92145,62866167
"kanzi.transform.DivSufSort.ssMergeBackward(int, int, int, int, int, int)",-523199,934500,-1032,2169
"kanzi.transform.DivSufSort.ssCompare(int, int, int)",-587251,3320133,1409602,30272617
"kanzi.transform.TextCodec.isText(byte)",-596805,15240674,-248006,100005616
"kanzi.bitstream.DefaultOutputBitStream.writeBits(byte[ ], int, int)",-614406,878841,-981,1029
"kanzi.bitstream.DefaultOutputBitStream.pushCurrent()",-614891,844488,-3740729,5283283
"kanzi.transform.DivSufSort.trPartition(int, int, int, int, int)",-622809,1290470,-140747,535262
"kanzi.transform.TextCodec.isLowerCase(byte)",-623449,7055582,-248006,100005616
"kanzi.transform.DivSufSort.constructBWT(int[ ], int[ ], int, int, int[ ], int)",-632097,1683686,23,1
"kanzi.transform.SBRT.forward(kanzi.SliceByteArray, kanzi.SliceByteArray)",-956931,956931,-1,1
"kanzi.transform.TextCodec$TextCodec2.emitWordIndex(byte[ ], int, int, int)",-1039165,1039165,-12697965,12697965
"kanzi.entropy.ANSRangeEncoder.encodeSymbol(int[ ], int, kanzi.entropy.ANSRangeEncoder$Symbol)",-2462807,2462807,-33678300,33678300
"kanzi.entropy.ANSRangeEncoder.encodeChunk(byte[ ], int, int)",-2831974,2831974,-1028,1028
"kanzi.transform.TextCodec$TextCodec2.forward(kanzi.SliceByteArray, kanzi.SliceByteArray)",-13464763,13464763,-1,1
