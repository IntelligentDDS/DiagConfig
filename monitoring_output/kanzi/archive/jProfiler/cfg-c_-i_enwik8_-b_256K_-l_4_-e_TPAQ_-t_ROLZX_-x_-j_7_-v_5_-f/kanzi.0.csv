"Hot Spot","Self Time Difference (microseconds)","Self Time Base (microseconds)","Invocations Difference","Invocations Base"
"kanzi.transform.ROLZCodec$ROLZEncoder.encode9Bits(int)",67400707,0,41929819,0
"kanzi.transform.ROLZCodec$ROLZEncoder.encodeBit(int)",58999520,0,404330851,0
"kanzi.transform.ROLZCodec$ROLZCodec2.findMatch(kanzi.SliceByteArray, int)",41121483,0,41927527,0
"kanzi.transform.ROLZCodec$ROLZCodec2.forward(kanzi.SliceByteArray, kanzi.SliceByteArray)",24699360,0,382,0
"java.lang.Thread.yield()",18760712,0,27327904,0
"kanzi.transform.TextCodec.isText(byte)",14228065,15240674,49082,100005616
"kanzi.transform.ROLZCodec.hash(byte[ ], int)",13160859,0,41927527,0
"kanzi.transform.ROLZCodec.getKey(byte[ ], int)",12690974,0,41927527,0
"kanzi.Memory$LittleEndian.readInt32(byte[ ], int)",12554693,0,92510997,0
"kanzi.transform.TextCodec$TextCodec2.forward(kanzi.SliceByteArray, kanzi.SliceByteArray)",10803860,13464763,381,1
"kanzi.util.hash.XXHash32.hash(byte[ ], int, int)",8343936,0,382,0
"kanzi.io.CompressedOutputStream$EncodingTask.encodeBlock(kanzi.SliceByteArray, kanzi.SliceByteArray, int, long, int, int)",7021525,32867,381,1
"kanzi.transform.TextCodec.isLowerCase(byte)",6638554,7055582,49082,100005616
"kanzi.transform.ROLZCodec$ROLZEncoder.setContext(byte)",6403783,0,47321933,0
"kanzi.Memory$LittleEndian.readInt16(byte[ ], int)",5655367,0,41927527,0
"java.lang.Math.min(int, int)",5529531,0,41930637,0
"kanzi.transform.ROLZCodec$ROLZEncoder.encodeBits(int, int)",5195300,0,5392496,0
"kanzi.util.hash.XXHash32.round(int, int)",3308777,0,25000000,0
"java.util.concurrent.atomic.AtomicInteger.get()",2813550,0,27328723,0
"kanzi.transform.ROLZCodec$ROLZEncoder.setMode(int)",1589448,0,10785756,0
"kanzi.Memory$BigEndian.writeInt32(byte[ ], int, int)",1149038,0,8507917,0
"java.lang.Integer.numberOfTrailingZeros(int)",923124,0,7104234,0
"kanzi.transform.TextCodec.isDelimiter(byte)",884035,1082185,-122,13861126
"kanzi.transform.ROLZCodec$ROLZCodec2.<init>(int, java.util.Map)",721159,0,382,0
"kanzi.transform.TextCodec$TextCodec2.reset(int)",540476,30492,381,1
"kanzi.transform.TextCodec$TextCodec2.emitSymbols(byte[ ], int, byte[ ], int, int, int)",430671,462712,97282,4625539
"kanzi.transform.TextCodec$DictEntry.<init>(byte[ ], int, int, int, int)",373430,39947,2214912,524288
"kanzi.transform.TextCodec.computeStats(byte[ ], int, int, int[ ], boolean)",292039,147014,381,1
"kanzi.transform.TextCodec$TextCodec2.emitWordIndex(byte[ ], int, int, int)",277686,1039165,-2998200,12697965
"kanzi.transform.TextCodec.sameWords(byte[ ], int, byte[ ], int, int)",191368,1350314,-2998200,12697965
"kanzi.transform.ROLZCodec$ROLZEncoder.reset()",96383,0,382,0
"kanzi.bitstream.DefaultOutputBitStream.writeBits(byte[ ], int, int)",71002,878841,-265,1029
"java.io.PrintStream.println(java.lang.String)",36237,0,1552,0
"kanzi.Memory$BigEndian.writeLong64(byte[ ], int, long)",24426,368975,-1566618,5283283
"kanzi.bitstream.DefaultOutputBitStream.pushCurrent()",24157,844488,-1566618,5283283
"java.io.PrintStream.println(java.lang.Object)",20004,0,384,0
"java.util.concurrent.ThreadPoolExecutor$Worker.run()",14300,0,7,0
"kanzi.transform.ROLZCodec$ROLZEncoder.<init>(int, int, kanzi.SliceByteArray)",12509,0,382,0
"kanzi.transform.Sequence.forward(kanzi.SliceByteArray, kanzi.SliceByteArray)",9735,0,382,0
"java.util.Map.put(java.lang.Object, java.lang.Object)",8740,0,2316,0
"kanzi.app.InfoPrinter.processEvent(kanzi.Event)",8238,0,1530,0
"java.util.concurrent.ExecutorService.invokeAll(java.util.Collection)",7283,0,55,0
"kanzi.Event.toString()",7271,0,1530,0
"java.util.Map.containsKey(java.lang.Object)",4924,0,383,0
"java.lang.Integer.valueOf(int)",4474,0,6121,0
"kanzi.transform.ROLZCodec.<init>(java.util.Map)",4041,0,382,0
"java.util.Map.getOrDefault(java.lang.Object, java.lang.Object)",3470,0,2676,0
"java.lang.StringBuilder.append(java.lang.String)",3368,0,13431,0
"java.lang.String.contains(java.lang.CharSequence)",2661,0,382,0
"kanzi.transform.Sequence.getMaxEncodedLength(int)",2372,0,764,0
"java.util.Map.remove(java.lang.Object)",2275,0,392,0
"java.lang.StringBuilder.append(long)",2268,0,3063,0
"kanzi.Event.<init>(kanzi.Event$Type, int, long, int, boolean)",2138,0,1530,0
"java.lang.Integer.toHexString(int)",1928,0,1910,0
"kanzi.transform.TextCodec.<clinit>()",1923,0,1,0
"java.lang.Long.valueOf(long)",1648,0,3440,0
"java.util.HashMap.<init>(java.util.Map)",1583,0,382,0
"kanzi.io.CompressedOutputStream.notifyListeners(kanzi.Listener[ ], kanzi.Event)",1550,0,1528,0
"kanzi.Event.getTime()",1408,0,3058,0
"java.util.Map.get(java.lang.Object)",1195,0,1155,0
"kanzi.transform.TextCodec.isUpperCase(byte)",1179,0,5487,0
"kanzi.bitstream.DefaultOutputBitStream.close()",1178,0,383,0
"kanzi.Event.<init>(kanzi.Event$Type, int, long, int, boolean, long)",1177,0,1530,0
"kanzi.Event.getId()",1166,0,3058,0
"java.lang.StringBuilder.<init>(int)",1089,0,1530,0
"java.lang.StringBuilder.append(int)",1024,0,1532,0
"java.lang.String.toUpperCase()",1021,0,393,0
"kanzi.bitstream.DefaultOutputBitStream.<init>(java.io.OutputStream, int)",1007,0,383,0
"kanzi.io.CompressedOutputStream$EncodingTask._get_skipBlocks(java.util.Map)",888,0,382,0
"kanzi.entropy.NullEntropyEncoder.encode(byte[ ], int, int)",887,0,382,0
"kanzi.transform.Sequence.<init>(kanzi.ByteTransform[ ])",877,0,382,0
"kanzi.Memory$BigEndian.readLong64(byte[ ], int)",-11720,397993,-1550218,5266221
"kanzi.io.CompressedOutputStream.<init>(kanzi.OutputBitStream, java.util.Map)",-38060,43035,0,1
"kanzi.Global.computeHistogramOrder0(byte[ ], int, int, int[ ], boolean)",-38273,38273,-1028,1028
"kanzi.transform.DivSufSort.trMedian3(int[ ], int, int, int, int)",-44027,44027,-335626,335626
"kanzi.transform.DivSufSort.ssMedian5(int, int, int, int, int, int, int)",-63508,63508,-447834,447834
"kanzi.transform.DivSufSort.ssMedian3(int, int, int, int, int)",-73526,73526,-543208,543208
"kanzi.transform.BWT.forward(kanzi.SliceByteArray, kanzi.SliceByteArray)",-74951,74951,-1,1
"kanzi.transform.DivSufSort.computeBWT(byte[ ], byte[ ], int[ ], int, int, int, int[ ], int)",-84152,84152,-1,1
"kanzi.transform.DivSufSort.ssIlg(int)",-89948,89948,-879443,879443
"kanzi.transform.DivSufSort.ssPartition(int, int, int, int)",-98096,98096,-437100,437100
"kanzi.transform.DivSufSort$TRBudget.check(int)",-109845,109845,-1121148,1121148
"kanzi.transform.DivSufSort.trPivot(int[ ], int, int, int)",-111359,111359,-535018,535018
"kanzi.transform.DivSufSort.ssPivot(int, int, int, int)",-197945,197945,-895009,895009
"kanzi.transform.DivSufSort.trSort(int, int)",-232047,232047,-1,1
"kanzi.transform.DivSufSort$Stack.push(int, int, int, int, int)",-243889,243889,-2539457,2539457
"kanzi.transform.ZRLT.forward(kanzi.SliceByteArray, kanzi.SliceByteArray)",-246319,246319,-1,1
"kanzi.transform.DivSufSort.trIlg(int)",-287614,287614,-2923260,2923260
"kanzi.transform.DivSufSort$Stack.pop()",-404963,404963,-3947293,3947293
"kanzi.transform.DivSufSort.trInsertionSort(int, int, int)",-600885,600885,-2977117,2977117
"kanzi.transform.DivSufSort.sortTypeBstar(int[ ], int[ ], int)",-683166,683166,-1,1
"kanzi.transform.DivSufSort.ssMergeBackward(int, int, int, int, int, int)",-934500,934500,-2169,2169
"kanzi.transform.SBRT.forward(kanzi.SliceByteArray, kanzi.SliceByteArray)",-956931,956931,-1,1
"kanzi.transform.DivSufSort.trPartition(int, int, int, int, int)",-1290470,1290470,-535262,535262
"kanzi.transform.DivSufSort.trIntroSort(int, int, int, int, kanzi.transform.DivSufSort$TRBudget)",-1403889,1403889,-1382349,1382349
"kanzi.transform.DivSufSort.constructBWT(int[ ], int[ ], int, int, int[ ], int)",-1683686,1683686,-1,1
"kanzi.transform.DivSufSort.ssInsertionSort(int, int, int, int)",-2221062,2221062,-1170187,1170187
"kanzi.entropy.ANSRangeEncoder.encodeSymbol(int[ ], int, kanzi.entropy.ANSRangeEncoder$Symbol)",-2462807,2462807,-33678300,33678300
"kanzi.entropy.ANSRangeEncoder.encodeChunk(byte[ ], int, int)",-2831974,2831974,-1028,1028
"kanzi.transform.DivSufSort.ssCompare(int, int, int)",-3320133,3320133,-30272617,30272617
"kanzi.transform.DivSufSort.swapInSA(int, int)",-4841531,4841531,-62866167,62866167
"kanzi.transform.DivSufSort.ssMultiKeyIntroSort(int, int, int, int)",-7787177,7787177,-23318,23318
