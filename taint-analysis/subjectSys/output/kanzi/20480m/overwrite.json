[{"packageName":"kanzi.app","className":"BlockCompressor$FileCompressTask","methodSignature":"<kanzi.app.BlockCompressor$FileCompressTask: call()Lkanzi/app/BlockCompressor$FileCompressResult;>","javaLine":635,"bytecodeIndex":-1,"operationType":"directlyIoSink","options":["overwrite"],"optionCount":1,"originalStmt":"$stack59#53 = virtualinvoke $stack58#41.<java.io.InputStream: int read(byte[],int,int)>($stack57#45, 0, $stack56#51)","mayValues":[]},{"packageName":"kanzi.app","className":"BlockDecompressor$FileDecompressTask","methodSignature":"<kanzi.app.BlockDecompressor$FileDecompressTask: call()Lkanzi/app/BlockDecompressor$FileDecompressResult;>","javaLine":527,"bytecodeIndex":-1,"operationType":"directlyIoSink","options":["overwrite"],"optionCount":1,"originalStmt":"virtualinvoke $stack154.<java.io.OutputStream: void write(byte[],int,int)>($stack153, 0, $stack60)","mayValues":[]},{"packageName":"kanzi.io","className":"CompressedInputStream","methodSignature":"<kanzi.io.CompressedInputStream: processBlock()I>","javaLine":490,"bytecodeIndex":-1,"operationType":"loopLockSink","options":["overwrite"],"optionCount":1,"originalStmt":"$stack32#14 = virtualinvoke $stack31#12.<java.util.concurrent.atomic.AtomicInteger: int get()>()","mayValues":[]},{"packageName":"kanzi.app","className":"BlockDecompressor$FileDecompressTask","methodSignature":"<kanzi.app.BlockDecompressor$FileDecompressTask: call()Lkanzi/app/BlockDecompressor$FileDecompressResult;>","javaLine":484,"bytecodeIndex":-1,"operationType":"directlyIoSink","options":["overwrite"],"optionCount":1,"originalStmt":"specialinvoke $u14.<java.io.File: void <init>(java.lang.String)>(inputName)","mayValues":[]},{"packageName":"kanzi.app","className":"BlockDecompressor$FileDecompressTask","methodSignature":"<kanzi.app.BlockDecompressor$FileDecompressTask: call()Lkanzi/app/BlockDecompressor$FileDecompressResult;>","javaLine":569,"bytecodeIndex":-1,"operationType":"directlyNewArrSink","options":["overwrite"],"optionCount":1,"originalStmt":"$stack171 = newarray (kanzi.Listener)[$stack170]","mayValues":[]},{"packageName":"kanzi.io","className":"CompressedInputStream","methodSignature":"<kanzi.io.CompressedInputStream: processBlock()I>","javaLine":466,"bytecodeIndex":-1,"operationType":"loopThreadSink","options":["overwrite"],"optionCount":1,"originalStmt":"$stack81 = interfaceinvoke result#37.<java.util.concurrent.Future: java.lang.Object get()>()","mayValues":[]},{"packageName":"kanzi.io","className":"CompressedInputStream","methodSignature":"<kanzi.io.CompressedInputStream: processBlock()I>","javaLine":466,"bytecodeIndex":-1,"operationType":"loopThreadSink","options":["overwrite"],"optionCount":1,"originalStmt":"$stack99 = interfaceinvoke $stack98.<java.util.concurrent.Callable: java.lang.Object call()>()","mayValues":[]},{"packageName":"kanzi.io","className":"CompressedInputStream","methodSignature":"<kanzi.io.CompressedInputStream: processBlock()I>","javaLine":466,"bytecodeIndex":-1,"operationType":"loopThreadSink","options":["overwrite"],"optionCount":1,"originalStmt":"$stack46 = interfaceinvoke $stack45.<java.util.concurrent.ExecutorService: java.util.List invokeAll(java.util.Collection)>($stack29#4)","mayValues":[]},{"packageName":"kanzi.io","className":"CompressedInputStream","methodSignature":"<kanzi.io.CompressedInputStream: processBlock()I>","javaLine":490,"bytecodeIndex":-1,"operationType":"loopNewArrSink","options":["overwrite"],"optionCount":1,"originalStmt":"$stack187 = newarray (int)[$stack185]","mayValues":[]},{"packageName":"kanzi.io","className":"CompressedInputStream","methodSignature":"<kanzi.io.CompressedInputStream: processBlock()I>","javaLine":490,"bytecodeIndex":-1,"operationType":"loopNewArrSink","options":["overwrite"],"optionCount":1,"originalStmt":"$stack33 = newarray (int)[1]","mayValues":[]},{"packageName":"kanzi.io","className":"CompressedInputStream","methodSignature":"<kanzi.io.CompressedInputStream: processBlock()I>","javaLine":490,"bytecodeIndex":-1,"operationType":"loopNewArrSink","options":["overwrite"],"optionCount":1,"originalStmt":"$stack150 = newarray (byte)[$stack41]","mayValues":[]},{"packageName":"kanzi.io","className":"CompressedOutputStream","methodSignature":"<kanzi.io.CompressedOutputStream: write(I)V>","javaLine":323,"bytecodeIndex":-1,"operationType":"directlyNewArrSink","options":["overwrite"],"optionCount":1,"originalStmt":"$stack48 = newarray (byte)[$stack38]","mayValues":[]},{"packageName":"kanzi.io","className":"CompressedOutputStream","methodSignature":"<kanzi.io.CompressedOutputStream: <init>(Lkanzi/OutputBitStream;Ljava/util/Map;)V>","javaLine":155,"bytecodeIndex":-1,"operationType":"directlyNewArrSink","options":["overwrite"],"optionCount":1,"originalStmt":"$stack56 = newarray (byte)[$stack54]","mayValues":[]},{"packageName":"kanzi.app","className":"BlockCompressor$FileCompressTask","methodSignature":"<kanzi.app.BlockCompressor$FileCompressTask: call()Lkanzi/app/BlockCompressor$FileCompressResult;>","javaLine":723,"bytecodeIndex":-1,"operationType":"directlyNewArrSink","options":["overwrite"],"optionCount":1,"originalStmt":"$stack84 = newarray (kanzi.Listener)[$stack83]","mayValues":[]},{"packageName":"kanzi.io","className":"CompressedOutputStream","methodSignature":"<kanzi.io.CompressedOutputStream: processBlock()V>","javaLine":439,"bytecodeIndex":-1,"operationType":"directlyNewArrSink","options":["overwrite"],"optionCount":1,"originalStmt":"$stack80 = newarray (int)[$stack78]","mayValues":[]},{"packageName":"kanzi.bitstream","className":"DefaultInputBitStream","methodSignature":"<kanzi.bitstream.DefaultInputBitStream: readFromInputStream(I)I>","javaLine":82,"bytecodeIndex":-1,"operationType":"directlyIoSink","options":["overwrite"],"optionCount":1,"originalStmt":"$stack8 = virtualinvoke $stack7.<java.io.InputStream: int read(byte[],int,int)>($stack6, 0, count)","mayValues":[]},{"packageName":"kanzi.io","className":"CompressedOutputStream","methodSignature":"<kanzi.io.CompressedOutputStream: write([BII)V>","javaLine":245,"bytecodeIndex":-1,"operationType":"loopNewArrSink","options":["overwrite"],"optionCount":1,"originalStmt":"$stack62 = newarray (byte)[$stack52]","mayValues":[]},{"packageName":"kanzi.app","className":"BlockDecompressor$FileDecompressTask","methodSignature":"<kanzi.app.BlockDecompressor$FileDecompressTask: call()Lkanzi/app/BlockDecompressor$FileDecompressResult;>","javaLine":538,"bytecodeIndex":-1,"operationType":"loopIoSink","options":["overwrite"],"optionCount":1,"originalStmt":"virtualinvoke $stack154.<java.io.OutputStream: void write(byte[],int,int)>($stack153, 0, $stack60)","mayValues":[]},{"packageName":"kanzi.app","className":"BlockDecompressor$FileDecompressTask","methodSignature":"<kanzi.app.BlockDecompressor$FileDecompressTask: call()Lkanzi/app/BlockDecompressor$FileDecompressResult;>","javaLine":442,"bytecodeIndex":-1,"operationType":"directlyIoSink","options":["overwrite"],"optionCount":1,"originalStmt":"$stack189 = virtualinvoke $stack187.<java.nio.file.FileSystem: java.nio.file.Path getPath(java.lang.String,java.lang.String[])>(outputName, $stack188)","mayValues":[]},{"packageName":"kanzi.app","className":"BlockCompressor$FileCompressTask","methodSignature":"<kanzi.app.BlockCompressor$FileCompressTask: call()Lkanzi/app/BlockCompressor$FileCompressResult;>","javaLine":564,"bytecodeIndex":-1,"operationType":"directlyIoSink","options":["overwrite"],"optionCount":1,"originalStmt":"specialinvoke $u8.<java.io.FileOutputStream: void <init>(java.io.File)>($u3)","mayValues":[]},{"packageName":"kanzi.io","className":"CompressedOutputStream","methodSignature":"<kanzi.io.CompressedOutputStream: write([BII)V>","javaLine":268,"bytecodeIndex":-1,"operationType":"directlyNewArrSink","options":["overwrite"],"optionCount":1,"originalStmt":"$stack62 = newarray (byte)[$stack52]","mayValues":[]},{"packageName":"kanzi.bitstream","className":"DefaultInputBitStream","methodSignature":"<kanzi.bitstream.DefaultInputBitStream: <init>(Ljava/io/InputStream;I)V>","javaLine":52,"bytecodeIndex":-1,"operationType":"directlyNewArrSink","options":["overwrite"],"optionCount":1,"originalStmt":"$stack4 = newarray (byte)[bufferSize]","mayValues":[]},{"packageName":"kanzi.io","className":"CompressedOutputStream","methodSignature":"<kanzi.io.CompressedOutputStream: write([BII)V>","javaLine":281,"bytecodeIndex":-1,"operationType":"loopNewArrSink","options":["overwrite"],"optionCount":1,"originalStmt":"$stack62 = newarray (byte)[$stack52]","mayValues":[]},{"packageName":"kanzi.io","className":"CompressedOutputStream","methodSignature":"<kanzi.io.CompressedOutputStream: processBlock()V>","javaLine":480,"bytecodeIndex":-1,"operationType":"loopThreadSink","options":["overwrite"],"optionCount":1,"originalStmt":"$stack32 = interfaceinvoke dataLength#13.<java.util.concurrent.Future: java.lang.Object get()>()","mayValues":[]},{"packageName":"kanzi.bitstream","className":"DefaultOutputBitStream","methodSignature":"<kanzi.bitstream.DefaultOutputBitStream: flush()V>","javaLine":203,"bytecodeIndex":-1,"operationType":"directlyIoSink","options":["overwrite"],"optionCount":1,"originalStmt":"virtualinvoke $stack6.<java.io.OutputStream: void write(byte[],int,int)>($stack5, 0, $stack4)","mayValues":[]},{"packageName":"kanzi.io","className":"CompressedInputStream","methodSignature":"<kanzi.io.CompressedInputStream: processBlock()I>","javaLine":490,"bytecodeIndex":-1,"operationType":"loopNewArrSink","options":["overwrite"],"optionCount":1,"originalStmt":"$stack187 = newarray (int)[$stack185]","mayValues":[]},{"packageName":"kanzi.io","className":"CompressedInputStream","methodSignature":"<kanzi.io.CompressedInputStream: processBlock()I>","javaLine":490,"bytecodeIndex":-1,"operationType":"loopNewArrSink","options":["overwrite"],"optionCount":1,"originalStmt":"$stack33 = newarray (int)[1]","mayValues":[]},{"packageName":"kanzi.io","className":"CompressedInputStream","methodSignature":"<kanzi.io.CompressedInputStream: processBlock()I>","javaLine":490,"bytecodeIndex":-1,"operationType":"loopNewArrSink","options":["overwrite"],"optionCount":1,"originalStmt":"$stack150 = newarray (byte)[$stack41]","mayValues":[]},{"packageName":"kanzi.app","className":"BlockDecompressor","methodSignature":"<kanzi.app.BlockDecompressor: call()Ljava/lang/Integer;>","javaLine":267,"bytecodeIndex":-1,"operationType":"directlyThreadSink","options":["overwrite"],"optionCount":1,"originalStmt":"$stack148#165 = virtualinvoke $u13.<java.util.concurrent.ArrayBlockingQueue: boolean offer(java.lang.Object)>($u17)","mayValues":[]},{"packageName":"kanzi.io","className":"CompressedInputStream","methodSignature":"<kanzi.io.CompressedInputStream: processBlock()I>","javaLine":466,"bytecodeIndex":-1,"operationType":"loopNewArrSink","options":["overwrite"],"optionCount":1,"originalStmt":"$stack187 = newarray (int)[$stack185]","mayValues":[]},{"packageName":"kanzi.io","className":"CompressedInputStream","methodSignature":"<kanzi.io.CompressedInputStream: processBlock()I>","javaLine":466,"bytecodeIndex":-1,"operationType":"loopNewArrSink","options":["overwrite"],"optionCount":1,"originalStmt":"$stack33 = newarray (int)[1]","mayValues":[]},{"packageName":"kanzi.io","className":"CompressedInputStream","methodSignature":"<kanzi.io.CompressedInputStream: processBlock()I>","javaLine":466,"bytecodeIndex":-1,"operationType":"loopNewArrSink","options":["overwrite"],"optionCount":1,"originalStmt":"$stack150 = newarray (byte)[$stack41]","mayValues":[]},{"packageName":"kanzi.io","className":"CompressedOutputStream","methodSignature":"<kanzi.io.CompressedOutputStream: <init>(Lkanzi/OutputBitStream;Ljava/util/Map;)V>","javaLine":151,"bytecodeIndex":-1,"operationType":"directlyNewArrSink","options":["overwrite"],"optionCount":1,"originalStmt":"$stack49 = newarray (kanzi.SliceByteArray)[$stack48]","mayValues":[]},{"packageName":"kanzi.app","className":"BlockCompressor","methodSignature":"<kanzi.app.BlockCompressor: call()Ljava/lang/Integer;>","javaLine":338,"bytecodeIndex":-1,"operationType":"directlyThreadSink","options":["overwrite"],"optionCount":1,"originalStmt":"$stack178#232 = virtualinvoke $u17.<java.util.concurrent.ArrayBlockingQueue: boolean offer(java.lang.Object)>($u21)","mayValues":[]},{"packageName":"kanzi.io","className":"CompressedInputStream","methodSignature":"<kanzi.io.CompressedInputStream: processBlock()I>","javaLine":466,"bytecodeIndex":-1,"operationType":"loopThreadSink","options":["overwrite"],"optionCount":1,"originalStmt":"$stack81 = interfaceinvoke result#37.<java.util.concurrent.Future: java.lang.Object get()>()","mayValues":[]},{"packageName":"kanzi.io","className":"CompressedInputStream","methodSignature":"<kanzi.io.CompressedInputStream: processBlock()I>","javaLine":466,"bytecodeIndex":-1,"operationType":"loopThreadSink","options":["overwrite"],"optionCount":1,"originalStmt":"$stack99 = interfaceinvoke $stack98.<java.util.concurrent.Callable: java.lang.Object call()>()","mayValues":[]},{"packageName":"kanzi.io","className":"CompressedInputStream","methodSignature":"<kanzi.io.CompressedInputStream: processBlock()I>","javaLine":466,"bytecodeIndex":-1,"operationType":"loopThreadSink","options":["overwrite"],"optionCount":1,"originalStmt":"$stack46 = interfaceinvoke $stack45.<java.util.concurrent.ExecutorService: java.util.List invokeAll(java.util.Collection)>($stack29#4)","mayValues":[]},{"packageName":"kanzi.app","className":"BlockCompressor$FileCompressTask","methodSignature":"<kanzi.app.BlockCompressor$FileCompressTask: call()Lkanzi/app/BlockCompressor$FileCompressResult;>","javaLine":553,"bytecodeIndex":-1,"operationType":"directlyIoSink","options":["overwrite"],"optionCount":1,"originalStmt":"$stack210 = virtualinvoke $stack208.<java.nio.file.FileSystem: java.nio.file.Path getPath(java.lang.String,java.lang.String[])>(outputName, $stack209)","mayValues":[]},{"packageName":"kanzi.app","className":"BlockDecompressor$FileDecompressTask","methodSignature":"<kanzi.app.BlockDecompressor$FileDecompressTask: call()Lkanzi/app/BlockDecompressor$FileDecompressResult;>","javaLine":538,"bytecodeIndex":-1,"operationType":"loopIoSink","options":["overwrite"],"optionCount":1,"originalStmt":"virtualinvoke $stack154.<java.io.OutputStream: void write(byte[],int,int)>($stack153, 0, $stack60)","mayValues":[]},{"packageName":"kanzi.io","className":"CompressedOutputStream","methodSignature":"<kanzi.io.CompressedOutputStream: processBlock()V>","javaLine":485,"bytecodeIndex":-1,"operationType":"loopThreadSink","options":["overwrite"],"optionCount":1,"originalStmt":"$stack32 = interfaceinvoke dataLength#13.<java.util.concurrent.Future: java.lang.Object get()>()","mayValues":[]},{"packageName":"kanzi.app","className":"BlockDecompressor$FileDecompressTask","methodSignature":"<kanzi.app.BlockDecompressor$FileDecompressTask: call()Lkanzi/app/BlockDecompressor$FileDecompressResult;>","javaLine":484,"bytecodeIndex":-1,"operationType":"directlyIoSink","options":["overwrite"],"optionCount":1,"originalStmt":"specialinvoke $u15.<java.io.FileInputStream: void <init>(java.io.File)>($u14)","mayValues":[]},{"packageName":"kanzi.bitstream","className":"DefaultOutputBitStream","methodSignature":"<kanzi.bitstream.DefaultOutputBitStream: flush()V>","javaLine":203,"bytecodeIndex":-1,"operationType":"directlyIoSink","options":["overwrite"],"optionCount":1,"originalStmt":"virtualinvoke $stack6.<java.io.OutputStream: void write(byte[],int,int)>($stack5, 0, $stack4)","mayValues":[]},{"packageName":"kanzi.app","className":"BlockCompressor","methodSignature":"<kanzi.app.BlockCompressor: printOut(Ljava/lang/String;Z)V>","javaLine":402,"bytecodeIndex":-1,"operationType":"directlyIoSink","options":["overwrite"],"optionCount":1,"originalStmt":"virtualinvoke $stack2.<java.io.PrintStream: void println(java.lang.String)>(msg)","mayValues":[]},{"packageName":"kanzi.io","className":"CompressedInputStream","methodSignature":"<kanzi.io.CompressedInputStream: processBlock()I>","javaLine":413,"bytecodeIndex":-1,"operationType":"directlyNewArrSink","options":["overwrite"],"optionCount":1,"originalStmt":"$stack150 = newarray (byte)[$stack41]","mayValues":[]},{"packageName":"kanzi.app","className":"BlockDecompressor$FileDecompressTask","methodSignature":"<kanzi.app.BlockDecompressor$FileDecompressTask: call()Lkanzi/app/BlockDecompressor$FileDecompressResult;>","javaLine":424,"bytecodeIndex":-1,"operationType":"directlyIoSink","options":["overwrite"],"optionCount":1,"originalStmt":"specialinvoke $u5.<java.io.File: void <init>(java.lang.String)>(outputName)","mayValues":[]},{"packageName":"kanzi.app","className":"BlockCompressor$FileCompressTask","methodSignature":"<kanzi.app.BlockCompressor$FileCompressTask: call()Lkanzi/app/BlockCompressor$FileCompressResult;>","javaLine":547,"bytecodeIndex":-1,"operationType":"directlyIoSink","options":["overwrite"],"optionCount":1,"originalStmt":"virtualinvoke $stack217.<java.io.PrintStream: void println(java.lang.String)>($stack221)","mayValues":[]}]