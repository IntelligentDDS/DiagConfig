[{"packageName":"org.apache.cassandra.concurrent","className":"DebuggableThreadPoolExecutor","methodSignature":"<org.apache.cassandra.concurrent.DebuggableThreadPoolExecutor: <init>(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;)V>","javaLine":100,"bytecodeIndex":-1,"operationType":"directlyThreadSink","options":["report_unconfirmed_repaired_data_mismatches"],"optionCount":1,"originalStmt":"specialinvoke this.<java.util.concurrent.ThreadPoolExecutor: void <init>(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue,java.util.concurrent.ThreadFactory)>(corePoolSize, maximumPoolSize, keepAliveTime, unit, workQueue, threadFactory)","mayValues":[]},{"packageName":"org.apache.cassandra.concurrent","className":"DebuggableThreadPoolExecutor","methodSignature":"<org.apache.cassandra.concurrent.DebuggableThreadPoolExecutor: <init>(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;)V>","javaLine":100,"bytecodeIndex":-1,"operationType":"directlyThreadSink","options":["report_unconfirmed_repaired_data_mismatches"],"optionCount":1,"originalStmt":"specialinvoke this.<java.util.concurrent.ThreadPoolExecutor: void <init>(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue,java.util.concurrent.ThreadFactory)>(corePoolSize, maximumPoolSize, keepAliveTime, unit, workQueue, threadFactory)","mayValues":[]},{"packageName":"org.apache.cassandra.io.compress","className":"LZ4Compressor","methodSignature":"<org.apache.cassandra.io.compress.LZ4Compressor: create(Ljava/util/Map;)Lorg/apache/cassandra/io/compress/LZ4Compressor;>","javaLine":63,"bytecodeIndex":-1,"operationType":"directlyThreadSink","options":["report_unconfirmed_repaired_data_mismatches"],"optionCount":1,"originalStmt":"$stack14 = virtualinvoke $stack13.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>($stack12)","mayValues":[]},{"packageName":"org.apache.cassandra.service.reads.repair","className":"RepairedDataVerifier$SnapshottingVerifier","methodSignature":"<org.apache.cassandra.service.reads.repair.RepairedDataVerifier$SnapshottingVerifier: verify(Lorg/apache/cassandra/service/reads/repair/RepairedDataTracker;)V>","javaLine":123,"bytecodeIndex":-1,"operationType":"ifNewArrSink","options":["report_unconfirmed_repaired_data_mismatches"],"optionCount":1,"originalStmt":"$stack7 = newarray (java.lang.Object)[4]","mayValues":[]},{"packageName":"org.apache.cassandra.service.reads.repair","className":"RepairedDataVerifier$SimpleVerifier","methodSignature":"<org.apache.cassandra.service.reads.repair.RepairedDataVerifier$SimpleVerifier: verify(Lorg/apache/cassandra/service/reads/repair/RepairedDataTracker;)V>","javaLine":96,"bytecodeIndex":-1,"operationType":"ifNewArrSink","options":["report_unconfirmed_repaired_data_mismatches"],"optionCount":1,"originalStmt":"$stack14 = newarray (java.lang.Object)[4]","mayValues":[]}]