[{"packageName":"org.apache.cassandra.locator","className":"TokenMetadata","methodSignature":"<org.apache.cassandra.locator.TokenMetadata: updateNormalTokens(Lcom/google/common/collect/Multimap;)V>","javaLine":204,"bytecodeIndex":-1,"operationType":"ifNewArrSink","options":["num_tokens"],"optionCount":1,"originalStmt":"$stack44 = newarray (java.lang.Object)[3]","mayValues":[]},{"packageName":"org.apache.cassandra.net","className":"RequestCallbacks","methodSignature":"<org.apache.cassandra.net.RequestCallbacks: addWithExpiration(Lorg/apache/cassandra/service/AbstractWriteResponseHandler;Lorg/apache/cassandra/net/Message;Lorg/apache/cassandra/locator/Replica;Lorg/apache/cassandra/db/ConsistencyLevel;Z)V>","javaLine":116,"bytecodeIndex":-1,"operationType":"ifNewArrSink","options":["num_tokens"],"optionCount":1,"originalStmt":"$stack16 = newarray (java.lang.Object)[3]","mayValues":[]},{"packageName":"org.apache.cassandra.net","className":"OutboundConnections","methodSignature":"<org.apache.cassandra.net.OutboundConnections: tryRegister(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Lorg/apache/cassandra/net/OutboundConnectionSettings;)Lorg/apache/cassandra/net/OutboundConnections;>","javaLine":93,"bytecodeIndex":-1,"operationType":"directlyThreadSink","options":["num_tokens"],"optionCount":1,"originalStmt":"$stack7 = interfaceinvoke in.<java.util.concurrent.ConcurrentMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>(key, $stack6)","mayValues":[]},{"packageName":"org.apache.cassandra.utils.concurrent","className":"WaitQueue$RegisteredSignal","methodSignature":"<org.apache.cassandra.utils.concurrent.WaitQueue$RegisteredSignal: cancel()V>","javaLine":394,"bytecodeIndex":-1,"operationType":"directlyLockSink","options":["num_tokens"],"optionCount":1,"originalStmt":"$stack3 = virtualinvoke $stack2.<java.util.concurrent.atomic.AtomicIntegerFieldUpdater: boolean compareAndSet(java.lang.Object,int,int)>(this, 0, $i0)","mayValues":[]},{"packageName":"org.apache.cassandra.io.compress","className":"LZ4Compressor","methodSignature":"<org.apache.cassandra.io.compress.LZ4Compressor: create(Ljava/util/Map;)Lorg/apache/cassandra/io/compress/LZ4Compressor;>","javaLine":64,"bytecodeIndex":-1,"operationType":"ifNewArrSink","options":["num_tokens"],"optionCount":1,"originalStmt":"$stack31 = newarray (java.lang.Object)[3]","mayValues":[]},{"packageName":"org.apache.cassandra.net","className":"AsyncPromise","methodSignature":"<org.apache.cassandra.net.AsyncPromise: trySet(Ljava/lang/Object;)Z>","javaLine":179,"bytecodeIndex":-1,"operationType":"loopLockSink","options":["num_tokens"],"optionCount":1,"originalStmt":"$stack6 = virtualinvoke $stack5.<java.util.concurrent.atomic.AtomicReferenceFieldUpdater: boolean compareAndSet(java.lang.Object,java.lang.Object,java.lang.Object)>(this, $stack8, v)","mayValues":[]},{"packageName":"org.apache.cassandra.cql3","className":"ColumnIdentifier","methodSignature":"<org.apache.cassandra.cql3.ColumnIdentifier: getInterned(Lorg/apache/cassandra/db/marshal/AbstractType;Ljava/nio/ByteBuffer;Ljava/lang/String;)Lorg/apache/cassandra/cql3/ColumnIdentifier;>","javaLine":156,"bytecodeIndex":-1,"operationType":"directlyThreadSink","options":["num_tokens"],"optionCount":1,"originalStmt":"$stack13 = interfaceinvoke $stack12.<java.util.concurrent.ConcurrentMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>($stack8, $stack11)","mayValues":[]},{"packageName":"org.apache.cassandra.utils.concurrent","className":"WaitQueue","methodSignature":"<org.apache.cassandra.utils.concurrent.WaitQueue: signal()Z>","javaLine":118,"bytecodeIndex":-1,"operationType":"loopThreadSink","options":["num_tokens"],"optionCount":1,"originalStmt":"$stack4 = virtualinvoke $stack3.<java.util.concurrent.ConcurrentLinkedQueue: java.lang.Object poll()>()","mayValues":[]},{"packageName":"org.apache.cassandra.io.compress","className":"LZ4Compressor","methodSignature":"<org.apache.cassandra.io.compress.LZ4Compressor: create(Ljava/util/Map;)Lorg/apache/cassandra/io/compress/LZ4Compressor;>","javaLine":73,"bytecodeIndex":-1,"operationType":"directlyThreadSink","options":["num_tokens"],"optionCount":1,"originalStmt":"$stack19 = virtualinvoke $stack18.<java.util.concurrent.ConcurrentHashMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>($stack12, $stack17)","mayValues":[]},{"packageName":"org.apache.cassandra.locator","className":"TokenMetadata","methodSignature":"<org.apache.cassandra.locator.TokenMetadata: updateNormalTokens(Lcom/google/common/collect/Multimap;)V>","javaLine":225,"bytecodeIndex":-1,"operationType":"loopNewArrSink","options":["num_tokens"],"optionCount":1,"originalStmt":"$stack44 = newarray (java.lang.Object)[3]","mayValues":[]},{"packageName":"org.apache.cassandra.concurrent","className":"DebuggableScheduledThreadPoolExecutor","methodSignature":"<org.apache.cassandra.concurrent.DebuggableScheduledThreadPoolExecutor: scheduleAtFixedRate(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;>","javaLine":96,"bytecodeIndex":-1,"operationType":"directlyThreadSink","options":["num_tokens"],"optionCount":1,"originalStmt":"$stack8 = specialinvoke this.<java.util.concurrent.ScheduledThreadPoolExecutor: java.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)>($stack7, initialDelay, period, unit)","mayValues":[]},{"packageName":"org.apache.cassandra.schema","className":"MigrationCoordinator","methodSignature":"<org.apache.cassandra.schema.MigrationCoordinator: awaitSchemaRequests(J)Z>","javaLine":595,"bytecodeIndex":-1,"operationType":"directlyNewArrSink","options":["num_tokens"],"optionCount":1,"originalStmt":"signals#9 = newarray (org.apache.cassandra.utils.concurrent.WaitQueue$Signal)[$stack24]","mayValues":[]},{"packageName":"org.apache.cassandra.utils.concurrent","className":"WaitQueue$RegisteredSignal","methodSignature":"<org.apache.cassandra.utils.concurrent.WaitQueue$RegisteredSignal: checkAndClear()Z>","javaLine":376,"bytecodeIndex":-1,"operationType":"ifLockSink","options":["num_tokens"],"optionCount":1,"originalStmt":"$stack3 = virtualinvoke $stack2.<java.util.concurrent.atomic.AtomicIntegerFieldUpdater: boolean compareAndSet(java.lang.Object,int,int)>(this, 0, $i0)","mayValues":[]},{"packageName":"org.apache.cassandra.schema","className":"TableParams","methodSignature":"<org.apache.cassandra.schema.TableParams: validate()V>","javaLine":170,"bytecodeIndex":-1,"operationType":"ifNewArrSink","options":["num_tokens"],"optionCount":1,"originalStmt":"$stack37 = newarray (java.lang.Object)[4]","mayValues":[]},{"packageName":"org.apache.cassandra.utils.concurrent","className":"WaitQueue$AbstractSignal","methodSignature":"<org.apache.cassandra.utils.concurrent.WaitQueue$AbstractSignal: awaitUntil(J)Z>","javaLine":309,"bytecodeIndex":-1,"operationType":"loopLockSink","options":["num_tokens"],"optionCount":1,"originalStmt":"staticinvoke <java.util.concurrent.locks.LockSupport: void parkNanos(long)>(delta)","mayValues":[]},{"packageName":"org.apache.cassandra.utils.concurrent","className":"WaitQueue$RegisteredSignal","methodSignature":"<org.apache.cassandra.utils.concurrent.WaitQueue$RegisteredSignal: cancel()V>","javaLine":394,"bytecodeIndex":-1,"operationType":"directlyLockSink","options":["num_tokens"],"optionCount":1,"originalStmt":"$stack3 = virtualinvoke $stack2.<java.util.concurrent.atomic.AtomicIntegerFieldUpdater: boolean compareAndSet(java.lang.Object,int,int)>(this, 0, $i0)","mayValues":[]},{"packageName":"org.apache.cassandra.cql3.statements.schema","className":"AlterKeyspaceStatement","methodSignature":"<org.apache.cassandra.cql3.statements.schema.AlterKeyspaceStatement: validateTransientReplication(Lorg/apache/cassandra/locator/AbstractReplicationStrategy;Lorg/apache/cassandra/locator/AbstractReplicationStrategy;)V>","javaLine":149,"bytecodeIndex":-1,"operationType":"ifNewArrSink","options":["num_tokens"],"optionCount":1,"originalStmt":"$stack45 = newarray (java.lang.Object)[0]","mayValues":[]},{"packageName":"org.apache.cassandra.locator","className":"TokenMetadata","methodSignature":"<org.apache.cassandra.locator.TokenMetadata: updateNormalTokens(Lcom/google/common/collect/Multimap;)V>","javaLine":228,"bytecodeIndex":-1,"operationType":"ifNewArrSink","options":["num_tokens"],"optionCount":1,"originalStmt":"$stack44 = newarray (java.lang.Object)[3]","mayValues":[]},{"packageName":"org.apache.cassandra.schema","className":"MigrationCoordinator","methodSignature":"<org.apache.cassandra.schema.MigrationCoordinator: awaitSchemaRequests(J)Z>","javaLine":581,"bytecodeIndex":-1,"operationType":"directlyLockSink","options":["num_tokens"],"optionCount":1,"originalStmt":"entermonitor this","mayValues":[]},{"packageName":"org.apache.cassandra.utils","className":"HeapUtils","methodSignature":"<org.apache.cassandra.utils.HeapUtils: getJcmdPath()Ljava/lang/String;>","javaLine":83,"bytecodeIndex":-1,"operationType":"directlyIoSink","options":["num_tokens"],"optionCount":1,"originalStmt":"specialinvoke $stack5.<java.io.File: void <init>(java.lang.String,java.lang.String)>($stack4, \"bin\")","mayValues":[]},{"packageName":"org.apache.cassandra.io.compress","className":"LZ4Compressor","methodSignature":"<org.apache.cassandra.io.compress.LZ4Compressor: create(Ljava/util/Map;)Lorg/apache/cassandra/io/compress/LZ4Compressor;>","javaLine":63,"bytecodeIndex":-1,"operationType":"directlyThreadSink","options":["num_tokens"],"optionCount":1,"originalStmt":"$stack14 = virtualinvoke $stack13.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>($stack12)","mayValues":[]},{"packageName":"org.apache.cassandra.io.compress","className":"LZ4Compressor","methodSignature":"<org.apache.cassandra.io.compress.LZ4Compressor: create(Ljava/util/Map;)Lorg/apache/cassandra/io/compress/LZ4Compressor;>","javaLine":63,"bytecodeIndex":-1,"operationType":"directlyThreadSink","options":["num_tokens"],"optionCount":1,"originalStmt":"$stack14 = virtualinvoke $stack13.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>($stack12)","mayValues":[]},{"packageName":"org.apache.cassandra.io.util","className":"FileUtils","methodSignature":"<org.apache.cassandra.io.util.FileUtils: createDirectory(Ljava/io/File;)V>","javaLine":535,"bytecodeIndex":-1,"operationType":"ifIoSink","options":["num_tokens"],"optionCount":1,"originalStmt":"$stack2 = virtualinvoke directory.<java.io.File: boolean mkdirs()>()","mayValues":[]},{"packageName":"org.apache.cassandra.dht.tokenallocator","className":"TokenAllocation","methodSignature":"<org.apache.cassandra.dht.tokenallocator.TokenAllocation: allocate(Lorg/apache/cassandra/locator/InetAddressAndPort;)Ljava/util/Collection;>","javaLine":111,"bytecodeIndex":-1,"operationType":"ifNewArrSink","options":["num_tokens"],"optionCount":1,"originalStmt":"$stack26 = newarray (java.lang.Object)[2]","mayValues":[]},{"packageName":"org.apache.cassandra.schema","className":"MigrationCoordinator","methodSignature":"<org.apache.cassandra.schema.MigrationCoordinator: awaitSchemaRequests(J)Z>","javaLine":600,"bytecodeIndex":-1,"operationType":"directlyThreadSink","options":["num_tokens"],"optionCount":1,"originalStmt":"$stack30 = virtualinvoke $stack29.<java.util.concurrent.TimeUnit: long toNanos(long)>(waitMillis)","mayValues":[]},{"packageName":"org.apache.cassandra.db","className":"SystemKeyspace","methodSignature":"<org.apache.cassandra.db.SystemKeyspace: setBootstrapState(Lorg/apache/cassandra/db/SystemKeyspace$BootstrapState;)V>","javaLine":1064,"bytecodeIndex":-1,"operationType":"ifNewArrSink","options":["num_tokens"],"optionCount":1,"originalStmt":"$stack9 = newarray (java.lang.String)[1]","mayValues":[]},{"packageName":"org.apache.cassandra.db","className":"SystemKeyspace","methodSignature":"<org.apache.cassandra.db.SystemKeyspace: setBootstrapState(Lorg/apache/cassandra/db/SystemKeyspace$BootstrapState;)V>","javaLine":1064,"bytecodeIndex":-1,"operationType":"ifNewArrSink","options":["num_tokens"],"optionCount":1,"originalStmt":"$stack5 = newarray (java.lang.Object)[1]","mayValues":[]},{"packageName":"org.apache.cassandra.db","className":"SystemKeyspace","methodSignature":"<org.apache.cassandra.db.SystemKeyspace: setBootstrapState(Lorg/apache/cassandra/db/SystemKeyspace$BootstrapState;)V>","javaLine":1064,"bytecodeIndex":-1,"operationType":"ifNewArrSink","options":["num_tokens"],"optionCount":1,"originalStmt":"$stack3 = newarray (java.lang.Object)[2]","mayValues":[]},{"packageName":"org.apache.cassandra.utils.concurrent","className":"WaitQueue","methodSignature":"<org.apache.cassandra.utils.concurrent.WaitQueue: signal()Z>","javaLine":113,"bytecodeIndex":-1,"operationType":"ifThreadSink","options":["num_tokens"],"optionCount":1,"originalStmt":"$stack4 = virtualinvoke $stack3.<java.util.concurrent.ConcurrentLinkedQueue: java.lang.Object poll()>()","mayValues":[]},{"packageName":"org.apache.cassandra.locator","className":"TokenMetadata","methodSignature":"<org.apache.cassandra.locator.TokenMetadata: updateNormalTokens(Lcom/google/common/collect/Multimap;)V>","javaLine":212,"bytecodeIndex":-1,"operationType":"loopNewArrSink","options":["num_tokens"],"optionCount":1,"originalStmt":"$stack44 = newarray (java.lang.Object)[3]","mayValues":[]},{"packageName":"org.apache.cassandra.locator","className":"TokenMetadata","methodSignature":"<org.apache.cassandra.locator.TokenMetadata: updateNormalTokens(Lcom/google/common/collect/Multimap;)V>","javaLine":212,"bytecodeIndex":-1,"operationType":"loopNewArrSink","options":["num_tokens"],"optionCount":1,"originalStmt":"$stack44 = newarray (java.lang.Object)[3]","mayValues":[]},{"packageName":"org.apache.cassandra.schema","className":"CompressionParams","methodSignature":"<org.apache.cassandra.schema.CompressionParams: fromMap(Ljava/util/Map;)Lorg/apache/cassandra/schema/CompressionParams;>","javaLine":104,"bytecodeIndex":-1,"operationType":"ifNewArrSink","options":["num_tokens"],"optionCount":1,"originalStmt":"$stack30 = newarray (java.lang.Object)[1]","mayValues":[]},{"packageName":"org.apache.cassandra.utils.concurrent","className":"WaitQueue$RegisteredSignal","methodSignature":"<org.apache.cassandra.utils.concurrent.WaitQueue$RegisteredSignal: checkAndClear()Z>","javaLine":376,"bytecodeIndex":-1,"operationType":"directlyLockSink","options":["num_tokens"],"optionCount":1,"originalStmt":"$stack3 = virtualinvoke $stack2.<java.util.concurrent.atomic.AtomicIntegerFieldUpdater: boolean compareAndSet(java.lang.Object,int,int)>(this, 0, $i0)","mayValues":[]},{"packageName":"org.apache.cassandra.service.reads","className":"SpeculativeRetryPolicy","methodSignature":"<org.apache.cassandra.service.reads.SpeculativeRetryPolicy: fromString(Ljava/lang/String;)Lorg/apache/cassandra/service/reads/SpeculativeRetryPolicy;>","javaLine":40,"bytecodeIndex":-1,"operationType":"ifNewArrSink","options":["num_tokens"],"optionCount":1,"originalStmt":"$stack7 = newarray (java.lang.Object)[2]","mayValues":[]},{"packageName":"org.apache.cassandra.service.reads","className":"SpeculativeRetryPolicy","methodSignature":"<org.apache.cassandra.service.reads.SpeculativeRetryPolicy: fromString(Ljava/lang/String;)Lorg/apache/cassandra/service/reads/SpeculativeRetryPolicy;>","javaLine":40,"bytecodeIndex":-1,"operationType":"ifNewArrSink","options":["num_tokens"],"optionCount":1,"originalStmt":"$stack7 = newarray (java.lang.Object)[2]","mayValues":[]},{"packageName":"org.apache.cassandra.locator","className":"TokenMetadata","methodSignature":"<org.apache.cassandra.locator.TokenMetadata: updateNormalTokens(Lcom/google/common/collect/Multimap;)V>","javaLine":204,"bytecodeIndex":-1,"operationType":"ifLockSink","options":["num_tokens"],"optionCount":1,"originalStmt":"interfaceinvoke $stack13.<java.util.concurrent.locks.Lock: void lock()>()","mayValues":[]},{"packageName":"org.apache.cassandra.locator","className":"TokenMetadata","methodSignature":"<org.apache.cassandra.locator.TokenMetadata: updateNormalTokens(Lcom/google/common/collect/Multimap;)V>","javaLine":204,"bytecodeIndex":-1,"operationType":"ifLockSink","options":["num_tokens"],"optionCount":1,"originalStmt":"$stack13 = interfaceinvoke $stack12.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>()","mayValues":[]},{"packageName":"org.apache.cassandra.locator","className":"TokenMetadata","methodSignature":"<org.apache.cassandra.locator.TokenMetadata: updateNormalTokens(Lcom/google/common/collect/Multimap;)V>","javaLine":204,"bytecodeIndex":-1,"operationType":"ifLockSink","options":["num_tokens"],"optionCount":1,"originalStmt":"interfaceinvoke $stack21.<java.util.concurrent.locks.Lock: void unlock()>()","mayValues":[]},{"packageName":"org.apache.cassandra.locator","className":"TokenMetadata","methodSignature":"<org.apache.cassandra.locator.TokenMetadata: updateNormalTokens(Lcom/google/common/collect/Multimap;)V>","javaLine":204,"bytecodeIndex":-1,"operationType":"ifLockSink","options":["num_tokens"],"optionCount":1,"originalStmt":"$stack21 = interfaceinvoke $stack20.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>()","mayValues":[]}]