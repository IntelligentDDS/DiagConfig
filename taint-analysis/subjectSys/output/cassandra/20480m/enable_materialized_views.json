[{"packageName":"org.apache.cassandra.io.compress","className":"LZ4Compressor","methodSignature":"<org.apache.cassandra.io.compress.LZ4Compressor: create(Ljava/util/Map;)Lorg/apache/cassandra/io/compress/LZ4Compressor;>","javaLine":64,"bytecodeIndex":-1,"operationType":"ifNewArrSink","options":["enable_materialized_views"],"optionCount":1,"originalStmt":"$stack31 = newarray (java.lang.Object)[3]","mayValues":[]},{"packageName":"org.apache.cassandra.schema","className":"TableParams","methodSignature":"<org.apache.cassandra.schema.TableParams: validate()V>","javaLine":170,"bytecodeIndex":-1,"operationType":"ifNewArrSink","options":["enable_materialized_views"],"optionCount":1,"originalStmt":"$stack37 = newarray (java.lang.Object)[4]","mayValues":[]},{"packageName":"org.apache.cassandra.concurrent","className":"SEPExecutor","methodSignature":"<org.apache.cassandra.concurrent.SEPExecutor: takeWorkPermit(Z)Z>","javaLine":175,"bytecodeIndex":-1,"operationType":"loopLockSink","options":["enable_materialized_views"],"optionCount":1,"originalStmt":"$stack15 = virtualinvoke $stack13.<java.util.concurrent.atomic.AtomicLong: boolean compareAndSet(long,long)>($stack8#6, $stack14)","mayValues":[]},{"packageName":"org.apache.cassandra.concurrent","className":"SEPExecutor","methodSignature":"<org.apache.cassandra.concurrent.SEPExecutor: takeWorkPermit(Z)Z>","javaLine":175,"bytecodeIndex":-1,"operationType":"loopLockSink","options":["enable_materialized_views"],"optionCount":1,"originalStmt":"$stack8#6 = virtualinvoke $stack7#4.<java.util.concurrent.atomic.AtomicLong: long get()>()","mayValues":[]},{"packageName":"org.apache.cassandra.concurrent","className":"SEPExecutor","methodSignature":"<org.apache.cassandra.concurrent.SEPExecutor: takeWorkPermit(Z)Z>","javaLine":173,"bytecodeIndex":-1,"operationType":"loopLockSink","options":["enable_materialized_views"],"optionCount":1,"originalStmt":"$stack15 = virtualinvoke $stack13.<java.util.concurrent.atomic.AtomicLong: boolean compareAndSet(long,long)>($stack8#6, $stack14)","mayValues":[]},{"packageName":"org.apache.cassandra.concurrent","className":"SEPExecutor","methodSignature":"<org.apache.cassandra.concurrent.SEPExecutor: takeWorkPermit(Z)Z>","javaLine":173,"bytecodeIndex":-1,"operationType":"loopLockSink","options":["enable_materialized_views"],"optionCount":1,"originalStmt":"$stack8#6 = virtualinvoke $stack7#4.<java.util.concurrent.atomic.AtomicLong: long get()>()","mayValues":[]},{"packageName":"org.apache.cassandra.io.compress","className":"LZ4Compressor","methodSignature":"<org.apache.cassandra.io.compress.LZ4Compressor: create(Ljava/util/Map;)Lorg/apache/cassandra/io/compress/LZ4Compressor;>","javaLine":63,"bytecodeIndex":-1,"operationType":"directlyThreadSink","options":["enable_materialized_views"],"optionCount":1,"originalStmt":"$stack14 = virtualinvoke $stack13.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>($stack12)","mayValues":[]},{"packageName":"org.apache.cassandra.cql3.statements.schema","className":"CreateViewStatement","methodSignature":"<org.apache.cassandra.cql3.statements.schema.CreateViewStatement: apply(Lorg/apache/cassandra/schema/Keyspaces;)Lorg/apache/cassandra/schema/Keyspaces;>","javaLine":101,"bytecodeIndex":-1,"operationType":"ifNewArrSink","options":["enable_materialized_views"],"optionCount":1,"originalStmt":"$stack239 = newarray (java.lang.Object)[0]","mayValues":[]}]