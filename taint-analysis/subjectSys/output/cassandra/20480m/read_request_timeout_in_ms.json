[{"packageName":"org.apache.cassandra.db","className":"Directories$SSTableLister","methodSignature":"<org.apache.cassandra.db.Directories$SSTableLister: filter()V>","javaLine":893,"bytecodeIndex":-1,"operationType":"ifIoSink","options":["read_request_timeout_in_ms"],"optionCount":1,"originalStmt":"$stack17 = virtualinvoke location.<java.io.File: java.nio.file.Path toPath()>()","mayValues":[]},{"packageName":"org.apache.cassandra.service.reads","className":"ReadCallback","methodSignature":"<org.apache.cassandra.service.reads.ReadCallback: await(JLjava/util/concurrent/TimeUnit;)Z>","javaLine":85,"bytecodeIndex":-1,"operationType":"directlyThreadSink","options":["read_request_timeout_in_ms"],"optionCount":1,"originalStmt":"$stack7 = virtualinvoke unit.<java.util.concurrent.TimeUnit: long toNanos(long)>(timePastStart)","mayValues":[]},{"packageName":"org.apache.cassandra.db","className":"Directories","methodSignature":"<org.apache.cassandra.db.Directories: getOrCreate(Ljava/io/File;[Ljava/lang/String;)Ljava/io/File;>","javaLine":1141,"bytecodeIndex":-1,"operationType":"ifIoSink","options":["read_request_timeout_in_ms"],"optionCount":1,"originalStmt":"specialinvoke $stack22#1.<java.io.File: void <init>(java.io.File,java.lang.String)>(base, $stack23)","mayValues":[]},{"packageName":"org.apache.cassandra.db.lifecycle","className":"Tracker","methodSignature":"<org.apache.cassandra.db.lifecycle.Tracker: apply(Lcom/google/common/base/Predicate;Lcom/google/common/base/Function;)Lorg/apache/cassandra/utils/Pair;>","javaLine":138,"bytecodeIndex":-1,"operationType":"directlyLockSink","options":["read_request_timeout_in_ms"],"optionCount":1,"originalStmt":"$stack10 = virtualinvoke $stack9.<java.util.concurrent.atomic.AtomicReference: boolean compareAndSet(java.lang.Object,java.lang.Object)>($stack12, updated)","mayValues":[]},{"packageName":"org.apache.cassandra.concurrent","className":"DebuggableThreadPoolExecutor","methodSignature":"<org.apache.cassandra.concurrent.DebuggableThreadPoolExecutor: <init>(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;)V>","javaLine":100,"bytecodeIndex":-1,"operationType":"directlyThreadSink","options":["read_request_timeout_in_ms"],"optionCount":1,"originalStmt":"specialinvoke this.<java.util.concurrent.ThreadPoolExecutor: void <init>(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue,java.util.concurrent.ThreadFactory)>(corePoolSize, maximumPoolSize, keepAliveTime, unit, workQueue, threadFactory)","mayValues":[]},{"packageName":"org.apache.cassandra.concurrent","className":"DebuggableThreadPoolExecutor","methodSignature":"<org.apache.cassandra.concurrent.DebuggableThreadPoolExecutor: <init>(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;)V>","javaLine":100,"bytecodeIndex":-1,"operationType":"directlyThreadSink","options":["read_request_timeout_in_ms"],"optionCount":1,"originalStmt":"specialinvoke this.<java.util.concurrent.ThreadPoolExecutor: void <init>(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue,java.util.concurrent.ThreadFactory)>(corePoolSize, maximumPoolSize, keepAliveTime, unit, workQueue, threadFactory)","mayValues":[]},{"packageName":"org.apache.cassandra.db","className":"Directories$SSTableLister","methodSignature":"<org.apache.cassandra.db.Directories$SSTableLister: filter()V>","javaLine":882,"bytecodeIndex":-1,"operationType":"loopIoSink","options":["read_request_timeout_in_ms"],"optionCount":1,"originalStmt":"$stack17 = virtualinvoke location.<java.io.File: java.nio.file.Path toPath()>()","mayValues":[]},{"packageName":"org.apache.cassandra.db","className":"Directories$SSTableLister","methodSignature":"<org.apache.cassandra.db.Directories$SSTableLister: filter()V>","javaLine":882,"bytecodeIndex":-1,"operationType":"loopIoSink","options":["read_request_timeout_in_ms"],"optionCount":1,"originalStmt":"$stack13 = virtualinvoke $stack12.<java.io.File: java.nio.file.Path toPath()>()","mayValues":[]},{"packageName":"org.apache.cassandra.db","className":"Directories$SSTableLister","methodSignature":"<org.apache.cassandra.db.Directories$SSTableLister: filter()V>","javaLine":882,"bytecodeIndex":-1,"operationType":"loopIoSink","options":["read_request_timeout_in_ms"],"optionCount":1,"originalStmt":"$stack24 = virtualinvoke $stack23.<java.io.File: java.nio.file.Path toPath()>()","mayValues":[]},{"packageName":"org.apache.cassandra.concurrent","className":"DebuggableThreadPoolExecutor","methodSignature":"<org.apache.cassandra.concurrent.DebuggableThreadPoolExecutor: <init>(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;)V>","javaLine":100,"bytecodeIndex":-1,"operationType":"directlyThreadSink","options":["read_request_timeout_in_ms"],"optionCount":1,"originalStmt":"specialinvoke this.<java.util.concurrent.ThreadPoolExecutor: void <init>(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue,java.util.concurrent.ThreadFactory)>(corePoolSize, maximumPoolSize, keepAliveTime, unit, workQueue, threadFactory)","mayValues":[]},{"packageName":"org.apache.cassandra.db.lifecycle","className":"Tracker","methodSignature":"<org.apache.cassandra.db.lifecycle.Tracker: apply(Lcom/google/common/base/Predicate;Lcom/google/common/base/Function;)Lorg/apache/cassandra/utils/Pair;>","javaLine":138,"bytecodeIndex":-1,"operationType":"directlyLockSink","options":["read_request_timeout_in_ms"],"optionCount":1,"originalStmt":"$stack10 = virtualinvoke $stack9.<java.util.concurrent.atomic.AtomicReference: boolean compareAndSet(java.lang.Object,java.lang.Object)>($stack12, updated)","mayValues":[]},{"packageName":"org.apache.cassandra.concurrent","className":"DebuggableScheduledThreadPoolExecutor","methodSignature":"<org.apache.cassandra.concurrent.DebuggableScheduledThreadPoolExecutor: scheduleWithFixedDelay(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;>","javaLine":102,"bytecodeIndex":-1,"operationType":"directlyThreadSink","options":["read_request_timeout_in_ms"],"optionCount":1,"originalStmt":"$stack8 = specialinvoke this.<java.util.concurrent.ScheduledThreadPoolExecutor: java.util.concurrent.ScheduledFuture scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)>($stack7, initialDelay, delay, unit)","mayValues":[]},{"packageName":"org.apache.cassandra.concurrent","className":"DebuggableScheduledThreadPoolExecutor","methodSignature":"<org.apache.cassandra.concurrent.DebuggableScheduledThreadPoolExecutor: scheduleWithFixedDelay(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;>","javaLine":102,"bytecodeIndex":-1,"operationType":"directlyThreadSink","options":["read_request_timeout_in_ms"],"optionCount":1,"originalStmt":"$stack8 = specialinvoke this.<java.util.concurrent.ScheduledThreadPoolExecutor: java.util.concurrent.ScheduledFuture scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)>($stack7, initialDelay, delay, unit)","mayValues":[]},{"packageName":"org.apache.cassandra.io.compress","className":"LZ4Compressor","methodSignature":"<org.apache.cassandra.io.compress.LZ4Compressor: create(Ljava/util/Map;)Lorg/apache/cassandra/io/compress/LZ4Compressor;>","javaLine":63,"bytecodeIndex":-1,"operationType":"directlyThreadSink","options":["read_request_timeout_in_ms"],"optionCount":1,"originalStmt":"$stack14 = virtualinvoke $stack13.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>($stack12)","mayValues":[]},{"packageName":"org.apache.cassandra.db.lifecycle","className":"Tracker","methodSignature":"<org.apache.cassandra.db.lifecycle.Tracker: reset(Lorg/apache/cassandra/db/Memtable;)V>","javaLine":226,"bytecodeIndex":-1,"operationType":"directlyLockSink","options":["read_request_timeout_in_ms"],"optionCount":1,"originalStmt":"virtualinvoke $stack3.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>($stack2)","mayValues":[]},{"packageName":"org.apache.cassandra.io.sstable.format","className":"SSTableReader","methodSignature":"<org.apache.cassandra.io.sstable.format.SSTableReader: openAll(Ljava/util/Set;Lorg/apache/cassandra/schema/TableMetadataRef;)Ljava/util/Collection;>","javaLine":557,"bytecodeIndex":-1,"operationType":"directlyThreadSink","options":["read_request_timeout_in_ms"],"optionCount":1,"originalStmt":"interfaceinvoke $stack10.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>($stack16)","mayValues":[]},{"packageName":"org.apache.cassandra.db","className":"ColumnFamilyStore","methodSignature":"<org.apache.cassandra.db.ColumnFamilyStore: scheduleFlush()V>","javaLine":287,"bytecodeIndex":-1,"operationType":"directlyThreadSink","options":["read_request_timeout_in_ms"],"optionCount":1,"originalStmt":"virtualinvoke $stack11.<org.apache.cassandra.concurrent.DebuggableScheduledThreadPoolExecutor: java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>($stack8, $stack10, $stack9)","mayValues":[]},{"packageName":"org.apache.cassandra.db","className":"Slices$Builder","methodSignature":"<org.apache.cassandra.db.Slices$Builder: build()Lorg/apache/cassandra/db/Slices;>","javaLine":220,"bytecodeIndex":-1,"operationType":"ifNewArrSink","options":["read_request_timeout_in_ms"],"optionCount":1,"originalStmt":"$stack10 = newarray (org.apache.cassandra.db.Slice)[$stack9]","mayValues":[]},{"packageName":"org.apache.cassandra.db","className":"Directories","methodSignature":"<org.apache.cassandra.db.Directories: getOrCreate(Ljava/io/File;[Ljava/lang/String;)Ljava/io/File;>","javaLine":1141,"bytecodeIndex":-1,"operationType":"directlyIoSink","options":["read_request_timeout_in_ms"],"optionCount":1,"originalStmt":"specialinvoke $stack22#1.<java.io.File: void <init>(java.io.File,java.lang.String)>(base, $stack23)","mayValues":[]},{"packageName":"org.apache.cassandra.db.lifecycle","className":"LogAwareFileLister","methodSignature":"<org.apache.cassandra.db.lifecycle.LogAwareFileLister: innerList()Ljava/util/List;>","javaLine":83,"bytecodeIndex":-1,"operationType":"directlyIoSink","options":["read_request_timeout_in_ms"],"optionCount":1,"originalStmt":"$stack2 = staticinvoke <java.nio.file.Files: java.nio.file.DirectoryStream newDirectoryStream(java.nio.file.Path)>($stack1)","mayValues":[]}]