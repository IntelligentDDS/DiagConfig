[{"packageName":"org.apache.cassandra.schema","className":"CompactionParams","methodSignature":"<org.apache.cassandra.schema.CompactionParams: fromMap(Ljava/util/Map;)Lorg/apache/cassandra/schema/CompactionParams;>","javaLine":265,"bytecodeIndex":-1,"operationType":"ifNewArrSink","options":["start_native_transport"],"optionCount":1,"originalStmt":"$stack10 = newarray (java.lang.Object)[2]","mayValues":[]},{"packageName":"org.apache.cassandra.schema","className":"CompressionParams","methodSignature":"<org.apache.cassandra.schema.CompressionParams: removeSstableCompressionClass(Ljava/util/Map;)Ljava/lang/String;>","javaLine":468,"bytecodeIndex":-1,"operationType":"ifNewArrSink","options":["start_native_transport"],"optionCount":1,"originalStmt":"$stack14 = newarray (java.lang.Object)[1]","mayValues":[]},{"packageName":"org.apache.cassandra.schema","className":"CompressionParams","methodSignature":"<org.apache.cassandra.schema.CompressionParams: removeSstableCompressionClass(Ljava/util/Map;)Ljava/lang/String;>","javaLine":468,"bytecodeIndex":-1,"operationType":"ifNewArrSink","options":["start_native_transport"],"optionCount":1,"originalStmt":"$stack17 = newarray (java.lang.Object)[2]","mayValues":[]},{"packageName":"org.apache.cassandra.cql3.statements.schema","className":"TableAttributes","methodSignature":"<org.apache.cassandra.cql3.statements.schema.TableAttributes: getMap(Lorg/apache/cassandra/schema/TableParams$Option;)Ljava/util/Map;>","javaLine":198,"bytecodeIndex":-1,"operationType":"ifNewArrSink","options":["start_native_transport"],"optionCount":1,"originalStmt":"$stack6 = newarray (java.lang.Object)[1]","mayValues":[]},{"packageName":"org.apache.cassandra.io.compress","className":"LZ4Compressor","methodSignature":"<org.apache.cassandra.io.compress.LZ4Compressor: create(Ljava/util/Map;)Lorg/apache/cassandra/io/compress/LZ4Compressor;>","javaLine":64,"bytecodeIndex":-1,"operationType":"ifNewArrSink","options":["start_native_transport"],"optionCount":1,"originalStmt":"$stack31 = newarray (java.lang.Object)[3]","mayValues":[]},{"packageName":"org.apache.cassandra.cql3","className":"ColumnIdentifier","methodSignature":"<org.apache.cassandra.cql3.ColumnIdentifier: getInterned(Lorg/apache/cassandra/db/marshal/AbstractType;Ljava/nio/ByteBuffer;Ljava/lang/String;)Lorg/apache/cassandra/cql3/ColumnIdentifier;>","javaLine":156,"bytecodeIndex":-1,"operationType":"directlyThreadSink","options":["start_native_transport"],"optionCount":1,"originalStmt":"$stack13 = interfaceinvoke $stack12.<java.util.concurrent.ConcurrentMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>($stack8, $stack11)","mayValues":[]},{"packageName":"org.apache.cassandra.io.compress","className":"LZ4Compressor","methodSignature":"<org.apache.cassandra.io.compress.LZ4Compressor: create(Ljava/util/Map;)Lorg/apache/cassandra/io/compress/LZ4Compressor;>","javaLine":73,"bytecodeIndex":-1,"operationType":"directlyThreadSink","options":["start_native_transport"],"optionCount":1,"originalStmt":"$stack19 = virtualinvoke $stack18.<java.util.concurrent.ConcurrentHashMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>($stack12, $stack17)","mayValues":[]},{"packageName":"org.apache.cassandra.cql3.statements.schema","className":"CreateTableStatement","methodSignature":"<org.apache.cassandra.cql3.statements.schema.CreateTableStatement: validateCompactTable(Ljava/util/List;Ljava/util/Map;)V>","javaLine":302,"bytecodeIndex":-1,"operationType":"ifNewArrSink","options":["start_native_transport"],"optionCount":1,"originalStmt":"$stack30 = newarray (java.lang.Object)[0]","mayValues":[]},{"packageName":"org.apache.cassandra.service.reads","className":"PercentileSpeculativeRetryPolicy","methodSignature":"<org.apache.cassandra.service.reads.PercentileSpeculativeRetryPolicy: fromString(Ljava/lang/String;)Lorg/apache/cassandra/service/reads/PercentileSpeculativeRetryPolicy;>","javaLine":103,"bytecodeIndex":-1,"operationType":"ifNewArrSink","options":["start_native_transport"],"optionCount":1,"originalStmt":"$stack13 = newarray (java.lang.Object)[2]","mayValues":[]},{"packageName":"org.apache.cassandra.schema","className":"TableParams","methodSignature":"<org.apache.cassandra.schema.TableParams: validate()V>","javaLine":170,"bytecodeIndex":-1,"operationType":"ifNewArrSink","options":["start_native_transport"],"optionCount":1,"originalStmt":"$stack37 = newarray (java.lang.Object)[4]","mayValues":[]},{"packageName":"org.apache.cassandra.schema","className":"TableParams","methodSignature":"<org.apache.cassandra.schema.TableParams: validate()V>","javaLine":170,"bytecodeIndex":-1,"operationType":"ifNewArrSink","options":["start_native_transport"],"optionCount":1,"originalStmt":"$stack37 = newarray (java.lang.Object)[4]","mayValues":[]},{"packageName":"org.apache.cassandra.utils","className":"HeapUtils","methodSignature":"<org.apache.cassandra.utils.HeapUtils: getJcmdPath()Ljava/lang/String;>","javaLine":83,"bytecodeIndex":-1,"operationType":"directlyIoSink","options":["start_native_transport"],"optionCount":1,"originalStmt":"specialinvoke $stack5.<java.io.File: void <init>(java.lang.String,java.lang.String)>($stack4, \"bin\")","mayValues":[]},{"packageName":"org.apache.cassandra.io.compress","className":"LZ4Compressor","methodSignature":"<org.apache.cassandra.io.compress.LZ4Compressor: create(Ljava/util/Map;)Lorg/apache/cassandra/io/compress/LZ4Compressor;>","javaLine":63,"bytecodeIndex":-1,"operationType":"directlyThreadSink","options":["start_native_transport"],"optionCount":1,"originalStmt":"$stack14 = virtualinvoke $stack13.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>($stack12)","mayValues":[]},{"packageName":"org.apache.cassandra.utils.btree","className":"BTree$Builder","methodSignature":"<org.apache.cassandra.utils.btree.BTree$Builder: <init>(Ljava/util/Comparator;I)V>","javaLine":1473,"bytecodeIndex":-1,"operationType":"directlyNewArrSink","options":["start_native_transport"],"optionCount":1,"originalStmt":"$stack3 = newarray (java.lang.Object)[initialCapacity#1]","mayValues":[]},{"packageName":"org.apache.cassandra.schema","className":"CompressionParams","methodSignature":"<org.apache.cassandra.schema.CompressionParams: fromMap(Ljava/util/Map;)Lorg/apache/cassandra/schema/CompressionParams;>","javaLine":104,"bytecodeIndex":-1,"operationType":"ifNewArrSink","options":["start_native_transport"],"optionCount":1,"originalStmt":"$stack30 = newarray (java.lang.Object)[1]","mayValues":[]},{"packageName":"org.apache.cassandra.utils","className":"HeapUtils","methodSignature":"<org.apache.cassandra.utils.HeapUtils: logProcessOutput(Ljava/lang/Process;)V>","javaLine":102,"bytecodeIndex":-1,"operationType":"directlyIoSink","options":["start_native_transport"],"optionCount":1,"originalStmt":"specialinvoke $stack8.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($stack9)","mayValues":[]}]